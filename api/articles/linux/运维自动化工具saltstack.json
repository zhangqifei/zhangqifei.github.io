{"title":"运维自动化工具saltstack","slug":"linux/运维自动化工具saltstack","date":"2017-08-06T10:42:22.000Z","updated":"2018-04-20T04:07:14.269Z","comments":true,"path":"api/articles/linux/运维自动化工具saltstack.json","excerpt":"Saltstack简介SaltStack是一个服务器基础架构集中化管理平台，具备配置管理、远程执行、监控等功能，一般可以理解为简化版的puppet和加强版的func。SaltStack基于Python语言实现，结合轻量级消息队列（ZeroMQ）与Python第三方模块（Pyzmq、PyCrypto、Pyjinjia2、python-msgpack和PyYAML等）构建。通过部署SaltStack环境，我们可以在成千上万台服务器上做到批量执行命令，根据不同业务特性进行配置集中化管理、分发文件、采集服务器数据、操作系统基础及软件包管理等，SaltStack是运维人员提高工作效率、规范业务配置与操作的利器。<br>","covers":["https://www.linuxidc.com/upload/2017_12/171221203479473.png","https://www.linuxidc.com/upload/2017_12/171221203479471.png","https://www.linuxidc.com/upload/2017_12/171221203479476.png","https://www.linuxidc.com/upload/2017_12/171221203479472.png","https://www.linuxidc.com/upload/2017_12/171221203479475.png"],"content":"<h2 id=\"Saltstack简介\"><a href=\"#Saltstack简介\" class=\"headerlink\" title=\"Saltstack简介\"></a>Saltstack简介</h2><p>SaltStack是一个服务器基础架构集中化管理平台，具备配置管理、远程执行、监控等功能，一般可以理解为简化版的puppet和加强版的func。SaltStack基于Python语言实现，结合轻量级消息队列（ZeroMQ）与Python第三方模块（Pyzmq、PyCrypto、Pyjinjia2、python-msgpack和PyYAML等）构建。通过部署SaltStack环境，我们可以在成千上万台服务器上做到批量执行命令，根据不同业务特性进行配置集中化管理、分发文件、采集服务器数据、操作系统基础及软件包管理等，SaltStack是运维人员提高工作效率、规范业务配置与操作的利器。<br><a id=\"more\"></a></p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li><strong>简单</strong><ul>\n<li>兼顾大规模部署与更小的系统的同时提供多功能性是很困难的，Salt是非常简单配置和维护，不管项目的大小。Salt可以胜任管理任意的数量的服务器，不管是本地网络，还是跨数据中心。架构采用C/S模式，在一个后台程序中集成必要功能。默认不需要复杂的配置就可以工作，同时可以定制用于特殊的需求。</li>\n</ul>\n</li>\n<li><strong>并行执行</strong><ul>\n<li>Salt的核心功能：</li>\n<li>通过并行方式让远端节点执行命令</li>\n<li>采用安全的加密/解析协议</li>\n<li>最小化使用网络和负载</li>\n<li>提供简单的程序接口</li>\n<li>Salt引入了更细粒度的控制，允许不通过目标名字，二是通过系统属性分类</li>\n</ul>\n</li>\n<li><strong>构建在成熟技术之上</strong><ul>\n<li>Salt采用了很多技术和技巧。网络层采用优秀的ZeroMQ库，所以守护进程里面包含AMQ代理。Salt采用公钥和主控通讯，同时使用更快的AES加密通信，验证和加密都已经集成在Salt里面。Salt使用msgpack通讯，所以更快速和更轻量网络交换。</li>\n</ul>\n</li>\n<li><strong>Python 客户端接口</strong><ul>\n<li>为了实现简单的扩展，Salt执行例程可以写成简单的Python模块。客户端程序收集的数据可以发送回主控端，可以是其他任意程序。可以通过Python API调用Salt程序，或者命令行，因此，Salt可以用来执行一次性命令，或者大型应用程序中的一部分模块。</li>\n</ul>\n</li>\n<li><strong>快速，灵活，可扩展</strong><ul>\n<li>结果是一个系统可以高速在一台或者一组服务器执行命令。Salt速度很快，配置简单，扩展性好，提供了一个远程执行架构，可以管理多样化需求的任何数量的服务器。整合了世界上最好的远程执行方法，增强处理能力，扩展使用范围，使得可以适用任何多样化复杂的网络。</li>\n</ul>\n</li>\n<li><strong>开源</strong><ul>\n<li>Salt基于Apache 2.0 licence开发，可以用于开源或者自有项目。请反馈你的扩展给项目组，以便更多人受益，共同促进Salt发展。请在你的系统部署 系统，让运维更便捷。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h3><p>saltstack是基于C/S服务模式，在该架构中，服务器端叫做Master，客户端叫做Minion。传统的C/S模式我们这样理解，客户端发送请求给服务器端，服务器端接受到来自客户端的请求并处理完成后再返回客户端。 在saltstack架构中，不仅有传统的C/S服务模式，而且有消息队列中的发布与订阅（pub/sub）服务模式。目前我们一般用其C/S架构做批量管理。</p>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479473.png\" alt=\"12\"><br></center>\n\n<ul>\n<li>Master：控制中心,salt命令运行和资源状态管理</li>\n<li>Minion : 需要管理的客户端机器,会主动去连接Mater端,并从Master端得到资源状态</li>\n<li>信息,同步资源管理信息</li>\n<li>States：配置管理的指令集</li>\n<li>Modules：在命令行中和配置文件中使用的指令模块,可以在命令行中运行</li>\n<li>Grains：minion端的变量,静态的</li>\n<li>Pillar：minion端的变量,动态的比较私密的变量,可以通过配置文件实现同步minions定义</li>\n<li>highstate：为minion端下发永久添加状态,从sls配置文件读取.即同步状态配置</li>\n<li>salt_schedule：会自动保持客户端配置</li>\n</ul>\n<h3 id=\"连接方式\"><a href=\"#连接方式\" class=\"headerlink\" title=\"连接方式\"></a>连接方式</h3><p>Master与Minion认证</p>\n<ul>\n<li>minion在第一次启动时，会在/etc/salt/pki/minion/（该路径在/etc/salt/minion里面设置）下自动生成minion.pem（private key）和 minion.pub（public key），然后将 minion.pub发送给master。</li>\n<li>master在接收到minion的public key后，通过salt-key命令accept minion public key，这样在master的/etc/salt/pki/master/minions下的将会存放以minion id命名的 public key，然后master就能对minion发送指令了。<ul>\n<li>SaltStack master启动后默认监听4505和4506两个端口。4505（publish_port）为saltstack的消息发布系统，4506（ret_port）为saltstack客户端与服务端通信的端口。如果使用lsof 查看4505端口，会发现所有的minion在4505端口持续保持在ESTABLISHED状态</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主机名\t                IP地址\t               系统</span><br><span class=\"line\">saltstack-server\t172.20.4.50\tCentOS release 6.9 (Final)</span><br><span class=\"line\">saltstack-1\t        172.20.4.51\tCentOS release 6.9 (Final)</span><br><span class=\"line\">saltstack-2\t        172.20.4.52\tCentOS release 6.9 (Final)</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化环境：\"><a href=\"#初始化环境：\" class=\"headerlink\" title=\"初始化环境：\"></a>初始化环境：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ntpdate -y &amp;&amp; ntpdate time1.aliyun.com                    #同步时间</span><br><span class=\"line\">service iptables stop                                                 #关闭iptables</span><br><span class=\"line\">sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/&quot;  /etc/selinux/config   #关闭selinux</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"> </span><br><span class=\"line\">cat &gt; saltstack.repo &lt;&lt;EOF</span><br><span class=\"line\">[saltstack-repo]</span><br><span class=\"line\">name=SaltStack repo for RHEL/CentOS $releasever</span><br><span class=\"line\">baseurl=https://repo.saltstack.com/yum/RedHat/$releasever/$basearch/latest</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://repo.saltstack.com/yum/redhat/$releasever/$basearch/latest/SALTSTACK-GPG-KEY.pub</span><br><span class=\"line\">EOF</span><br><span class=\"line\">rpm --import https://repo.saltstack.com/yum/redhat/6/x86_64/latest/SALTSTACK-GPG-KEY.pub</span><br><span class=\"line\">yum cleanall &amp;&amp; yum makecache                #更新yum源</span><br></pre></td></tr></table></figure>\n<h3 id=\"master-端安装\"><a href=\"#master-端安装\" class=\"headerlink\" title=\"master  端安装\"></a>master  端安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install salt-master</span><br><span class=\"line\">mkdir /etc/salt/states</span><br><span class=\"line\"> </span><br><span class=\"line\">编辑/etc/salt/states</span><br><span class=\"line\">interface: 0.0.0.0</span><br><span class=\"line\">state_top: top.sls</span><br><span class=\"line\">file_roots:</span><br><span class=\"line\">   base:</span><br><span class=\"line\">     - /etc/salt/states</span><br></pre></td></tr></table></figure>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479471.png\" alt=\"12\"><br></center>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">启动服务，并设置开机自启</span><br><span class=\"line\">/etc/init.d/salt-master start</span><br><span class=\"line\">chkconfig salt-master on</span><br></pre></td></tr></table></figure>\n<h3 id=\"monitor端安装\"><a href=\"#monitor端安装\" class=\"headerlink\" title=\"monitor端安装\"></a>monitor端安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置yum源和master方法一致</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install salt-minion</span><br><span class=\"line\">修改/etc/salt/minion文件（slatstack-1/2 都更改成对应的id，master指向master的ip地址）</span><br></pre></td></tr></table></figure>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479476.png\" alt><br></center><br>启动客户端，并设置开机自启动<br><center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479474.png\" alt><br></center>\n\n<h3 id=\"证书管理\"><a href=\"#证书管理\" class=\"headerlink\" title=\"证书管理\"></a>证书管理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#执行salt-key -L  查看秘钥验证</span><br><span class=\"line\">#执行Salt-key -a 加ID添加认证秘钥</span><br></pre></td></tr></table></figure>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479472.png\" alt><br></center>\n\n<h3 id=\"验证测试\"><a href=\"#验证测试\" class=\"headerlink\" title=\"验证测试\"></a>验证测试</h3><center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479475.png\" alt><br></center>    \n\n<h2 id=\"常见模块\"><a href=\"#常见模块\" class=\"headerlink\" title=\"常见模块\"></a>常见模块</h2><p>(1)、cp模块（实现远程文件、目录的复制，以及下载URL文件等操作）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将主服务器file_roots指定位置下的目录复制到被控主机</span><br><span class=\"line\">salt &quot;*&quot; cp.get_dir salt://testdir /tmp/test</span><br><span class=\"line\"></span><br><span class=\"line\">将主服务器file_roots指定位置下的文件复制到被控主机</span><br><span class=\"line\">salt &quot;*&quot; cp.get_file salt://testdir/testfile /tmp/testfile</span><br><span class=\"line\"></span><br><span class=\"line\">下载指定URL内容到被控主机指定位置</span><br><span class=\"line\">salt &quot;*&quot; cp.get_url http://mirrors.163.com/.help/CentOS6-Base-163.repo /etc/yum.repos.d/CentOS6-Base-163.repo</span><br></pre></td></tr></table></figure></p>\n<p>(2)、cmd模块（实现远程的命令行调用执行）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &quot;*&quot; cmd.run &apos;netstat -lntup&apos;</span><br></pre></td></tr></table></figure></p>\n<p>(3)、cron模块（实现被控主机的crontab操作）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为指定的被控主机、root用户添加crontab信息</span><br><span class=\"line\">salt &quot;*&quot; cron.set_job root &apos;*/5&apos; &apos;*&apos; &apos;*&apos; &apos;*&apos; &apos;*&apos; &apos;/usr/sbin/ntpdate time1.aliyun.com&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">删除指定的被控主机、root用户的crontab信息</span><br><span class=\"line\">salt &quot;*&quot; cron.rm_job root &apos;/usr/sbin/ntpdate time1.aliyun.com&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">查看定时任务</span><br><span class=\"line\">salt &apos;*&apos; cron.raw_cron root</span><br></pre></td></tr></table></figure></p>\n<p>(4)、dnsutil模块（实现被控主机通用DNS操作）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为被控主机添加指定的hosts主机配置项</span><br><span class=\"line\">salt &apos;*&apos; dnsutil.hosts_append /etc/hosts 127.0.0.1 test.saltstack.com</span><br></pre></td></tr></table></figure></p>\n<p>(5)、file模块（被控主机文件常见操作，包括文件读写、权限、查找、校验等）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; file.get_sum /etc/resolv.conf md5</span><br><span class=\"line\">salt &apos;*&apos; file.stats /etc/resolv.conf</span><br></pre></td></tr></table></figure></p>\n<p>(6)、network模块（返回被控主机网络信息）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; network.ip_addrs</span><br><span class=\"line\">salt &apos;*&apos; network.interfaces</span><br></pre></td></tr></table></figure></p>\n<p>(7)、pkg包管理模块（被控主机程序包管理，如yum、apt-get等）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; pkg.install sysstat</span><br><span class=\"line\">salt &apos;*&apos; pkg.file_list sysstat</span><br></pre></td></tr></table></figure></p>\n<p>(8)、service 服务模块（被控主机程序包服务管理）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; service.enable crond</span><br><span class=\"line\">salt &apos;*&apos; service.disable crond</span><br><span class=\"line\">salt &apos;*&apos; service.status crond</span><br><span class=\"line\">salt &apos;*&apos; service.stop crond</span><br><span class=\"line\">salt &apos;*&apos; service.start crond</span><br><span class=\"line\">salt &apos;*&apos; service.restart crond</span><br><span class=\"line\">salt &apos;*&apos; service.reload crond</span><br></pre></td></tr></table></figure></p>\n","more":"</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li><strong>简单</strong><ul>\n<li>兼顾大规模部署与更小的系统的同时提供多功能性是很困难的，Salt是非常简单配置和维护，不管项目的大小。Salt可以胜任管理任意的数量的服务器，不管是本地网络，还是跨数据中心。架构采用C/S模式，在一个后台程序中集成必要功能。默认不需要复杂的配置就可以工作，同时可以定制用于特殊的需求。</li>\n</ul>\n</li>\n<li><strong>并行执行</strong><ul>\n<li>Salt的核心功能：</li>\n<li>通过并行方式让远端节点执行命令</li>\n<li>采用安全的加密/解析协议</li>\n<li>最小化使用网络和负载</li>\n<li>提供简单的程序接口</li>\n<li>Salt引入了更细粒度的控制，允许不通过目标名字，二是通过系统属性分类</li>\n</ul>\n</li>\n<li><strong>构建在成熟技术之上</strong><ul>\n<li>Salt采用了很多技术和技巧。网络层采用优秀的ZeroMQ库，所以守护进程里面包含AMQ代理。Salt采用公钥和主控通讯，同时使用更快的AES加密通信，验证和加密都已经集成在Salt里面。Salt使用msgpack通讯，所以更快速和更轻量网络交换。</li>\n</ul>\n</li>\n<li><strong>Python 客户端接口</strong><ul>\n<li>为了实现简单的扩展，Salt执行例程可以写成简单的Python模块。客户端程序收集的数据可以发送回主控端，可以是其他任意程序。可以通过Python API调用Salt程序，或者命令行，因此，Salt可以用来执行一次性命令，或者大型应用程序中的一部分模块。</li>\n</ul>\n</li>\n<li><strong>快速，灵活，可扩展</strong><ul>\n<li>结果是一个系统可以高速在一台或者一组服务器执行命令。Salt速度很快，配置简单，扩展性好，提供了一个远程执行架构，可以管理多样化需求的任何数量的服务器。整合了世界上最好的远程执行方法，增强处理能力，扩展使用范围，使得可以适用任何多样化复杂的网络。</li>\n</ul>\n</li>\n<li><strong>开源</strong><ul>\n<li>Salt基于Apache 2.0 licence开发，可以用于开源或者自有项目。请反馈你的扩展给项目组，以便更多人受益，共同促进Salt发展。请在你的系统部署 系统，让运维更便捷。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h3><p>saltstack是基于C/S服务模式，在该架构中，服务器端叫做Master，客户端叫做Minion。传统的C/S模式我们这样理解，客户端发送请求给服务器端，服务器端接受到来自客户端的请求并处理完成后再返回客户端。 在saltstack架构中，不仅有传统的C/S服务模式，而且有消息队列中的发布与订阅（pub/sub）服务模式。目前我们一般用其C/S架构做批量管理。</p>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479473.png\" alt=\"12\"><br></center>\n\n<ul>\n<li>Master：控制中心,salt命令运行和资源状态管理</li>\n<li>Minion : 需要管理的客户端机器,会主动去连接Mater端,并从Master端得到资源状态</li>\n<li>信息,同步资源管理信息</li>\n<li>States：配置管理的指令集</li>\n<li>Modules：在命令行中和配置文件中使用的指令模块,可以在命令行中运行</li>\n<li>Grains：minion端的变量,静态的</li>\n<li>Pillar：minion端的变量,动态的比较私密的变量,可以通过配置文件实现同步minions定义</li>\n<li>highstate：为minion端下发永久添加状态,从sls配置文件读取.即同步状态配置</li>\n<li>salt_schedule：会自动保持客户端配置</li>\n</ul>\n<h3 id=\"连接方式\"><a href=\"#连接方式\" class=\"headerlink\" title=\"连接方式\"></a>连接方式</h3><p>Master与Minion认证</p>\n<ul>\n<li>minion在第一次启动时，会在/etc/salt/pki/minion/（该路径在/etc/salt/minion里面设置）下自动生成minion.pem（private key）和 minion.pub（public key），然后将 minion.pub发送给master。</li>\n<li>master在接收到minion的public key后，通过salt-key命令accept minion public key，这样在master的/etc/salt/pki/master/minions下的将会存放以minion id命名的 public key，然后master就能对minion发送指令了。<ul>\n<li>SaltStack master启动后默认监听4505和4506两个端口。4505（publish_port）为saltstack的消息发布系统，4506（ret_port）为saltstack客户端与服务端通信的端口。如果使用lsof 查看4505端口，会发现所有的minion在4505端口持续保持在ESTABLISHED状态</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主机名\t                IP地址\t               系统</span><br><span class=\"line\">saltstack-server\t172.20.4.50\tCentOS release 6.9 (Final)</span><br><span class=\"line\">saltstack-1\t        172.20.4.51\tCentOS release 6.9 (Final)</span><br><span class=\"line\">saltstack-2\t        172.20.4.52\tCentOS release 6.9 (Final)</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化环境：\"><a href=\"#初始化环境：\" class=\"headerlink\" title=\"初始化环境：\"></a>初始化环境：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ntpdate -y &amp;&amp; ntpdate time1.aliyun.com                    #同步时间</span><br><span class=\"line\">service iptables stop                                                 #关闭iptables</span><br><span class=\"line\">sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/&quot;  /etc/selinux/config   #关闭selinux</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"> </span><br><span class=\"line\">cat &gt; saltstack.repo &lt;&lt;EOF</span><br><span class=\"line\">[saltstack-repo]</span><br><span class=\"line\">name=SaltStack repo for RHEL/CentOS $releasever</span><br><span class=\"line\">baseurl=https://repo.saltstack.com/yum/RedHat/$releasever/$basearch/latest</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://repo.saltstack.com/yum/redhat/$releasever/$basearch/latest/SALTSTACK-GPG-KEY.pub</span><br><span class=\"line\">EOF</span><br><span class=\"line\">rpm --import https://repo.saltstack.com/yum/redhat/6/x86_64/latest/SALTSTACK-GPG-KEY.pub</span><br><span class=\"line\">yum cleanall &amp;&amp; yum makecache                #更新yum源</span><br></pre></td></tr></table></figure>\n<h3 id=\"master-端安装\"><a href=\"#master-端安装\" class=\"headerlink\" title=\"master  端安装\"></a>master  端安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install salt-master</span><br><span class=\"line\">mkdir /etc/salt/states</span><br><span class=\"line\"> </span><br><span class=\"line\">编辑/etc/salt/states</span><br><span class=\"line\">interface: 0.0.0.0</span><br><span class=\"line\">state_top: top.sls</span><br><span class=\"line\">file_roots:</span><br><span class=\"line\">   base:</span><br><span class=\"line\">     - /etc/salt/states</span><br></pre></td></tr></table></figure>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479471.png\" alt=\"12\"><br></center>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">启动服务，并设置开机自启</span><br><span class=\"line\">/etc/init.d/salt-master start</span><br><span class=\"line\">chkconfig salt-master on</span><br></pre></td></tr></table></figure>\n<h3 id=\"monitor端安装\"><a href=\"#monitor端安装\" class=\"headerlink\" title=\"monitor端安装\"></a>monitor端安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置yum源和master方法一致</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install salt-minion</span><br><span class=\"line\">修改/etc/salt/minion文件（slatstack-1/2 都更改成对应的id，master指向master的ip地址）</span><br></pre></td></tr></table></figure>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479476.png\" alt><br></center><br>启动客户端，并设置开机自启动<br><center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479474.png\" alt><br></center>\n\n<h3 id=\"证书管理\"><a href=\"#证书管理\" class=\"headerlink\" title=\"证书管理\"></a>证书管理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#执行salt-key -L  查看秘钥验证</span><br><span class=\"line\">#执行Salt-key -a 加ID添加认证秘钥</span><br></pre></td></tr></table></figure>\n<center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479472.png\" alt><br></center>\n\n<h3 id=\"验证测试\"><a href=\"#验证测试\" class=\"headerlink\" title=\"验证测试\"></a>验证测试</h3><center><br><img src=\"https://www.linuxidc.com/upload/2017_12/171221203479475.png\" alt><br></center>    \n\n<h2 id=\"常见模块\"><a href=\"#常见模块\" class=\"headerlink\" title=\"常见模块\"></a>常见模块</h2><p>(1)、cp模块（实现远程文件、目录的复制，以及下载URL文件等操作）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将主服务器file_roots指定位置下的目录复制到被控主机</span><br><span class=\"line\">salt &quot;*&quot; cp.get_dir salt://testdir /tmp/test</span><br><span class=\"line\"></span><br><span class=\"line\">将主服务器file_roots指定位置下的文件复制到被控主机</span><br><span class=\"line\">salt &quot;*&quot; cp.get_file salt://testdir/testfile /tmp/testfile</span><br><span class=\"line\"></span><br><span class=\"line\">下载指定URL内容到被控主机指定位置</span><br><span class=\"line\">salt &quot;*&quot; cp.get_url http://mirrors.163.com/.help/CentOS6-Base-163.repo /etc/yum.repos.d/CentOS6-Base-163.repo</span><br></pre></td></tr></table></figure></p>\n<p>(2)、cmd模块（实现远程的命令行调用执行）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &quot;*&quot; cmd.run &apos;netstat -lntup&apos;</span><br></pre></td></tr></table></figure></p>\n<p>(3)、cron模块（实现被控主机的crontab操作）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为指定的被控主机、root用户添加crontab信息</span><br><span class=\"line\">salt &quot;*&quot; cron.set_job root &apos;*/5&apos; &apos;*&apos; &apos;*&apos; &apos;*&apos; &apos;*&apos; &apos;/usr/sbin/ntpdate time1.aliyun.com&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">删除指定的被控主机、root用户的crontab信息</span><br><span class=\"line\">salt &quot;*&quot; cron.rm_job root &apos;/usr/sbin/ntpdate time1.aliyun.com&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">查看定时任务</span><br><span class=\"line\">salt &apos;*&apos; cron.raw_cron root</span><br></pre></td></tr></table></figure></p>\n<p>(4)、dnsutil模块（实现被控主机通用DNS操作）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为被控主机添加指定的hosts主机配置项</span><br><span class=\"line\">salt &apos;*&apos; dnsutil.hosts_append /etc/hosts 127.0.0.1 test.saltstack.com</span><br></pre></td></tr></table></figure></p>\n<p>(5)、file模块（被控主机文件常见操作，包括文件读写、权限、查找、校验等）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; file.get_sum /etc/resolv.conf md5</span><br><span class=\"line\">salt &apos;*&apos; file.stats /etc/resolv.conf</span><br></pre></td></tr></table></figure></p>\n<p>(6)、network模块（返回被控主机网络信息）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; network.ip_addrs</span><br><span class=\"line\">salt &apos;*&apos; network.interfaces</span><br></pre></td></tr></table></figure></p>\n<p>(7)、pkg包管理模块（被控主机程序包管理，如yum、apt-get等）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; pkg.install sysstat</span><br><span class=\"line\">salt &apos;*&apos; pkg.file_list sysstat</span><br></pre></td></tr></table></figure></p>\n<p>(8)、service 服务模块（被控主机程序包服务管理）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salt &apos;*&apos; service.enable crond</span><br><span class=\"line\">salt &apos;*&apos; service.disable crond</span><br><span class=\"line\">salt &apos;*&apos; service.status crond</span><br><span class=\"line\">salt &apos;*&apos; service.stop crond</span><br><span class=\"line\">salt &apos;*&apos; service.start crond</span><br><span class=\"line\">salt &apos;*&apos; service.restart crond</span><br><span class=\"line\">salt &apos;*&apos; service.reload crond</span><br></pre></td></tr></table></figure></p>","categories":[{"name":"linux","path":"api/categories/linux.json"},{"name":"运维自动化工具","path":"api/categories/运维自动化工具.json"}],"tags":[{"name":"saltstack","path":"api/tags/saltstack.json"}]}