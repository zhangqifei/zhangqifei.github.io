{"title":"linux命令-grep","slug":"linux/linux命令-grep","date":"2016-07-06T07:12:42.000Z","updated":"2018-04-12T10:54:10.635Z","comments":true,"path":"api/articles/linux/linux命令-grep.json","excerpt":"Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。","covers":null,"content":"<ul>\n<li>Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是<code>Global Regular Expression Print</code>，表示全局正则表达式版本，它的使用权限是所有用户。</li>\n<li>grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。<a id=\"more\"></a></li>\n<li>grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果模板搜索成功，则返回0，如果搜索不成功，则返回1，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。</li>\n</ul>\n<h3 id=\"1．命令格式：\"><a href=\"#1．命令格式：\" class=\"headerlink\" title=\"1．命令格式：\"></a>1．命令格式：</h3><blockquote>\n<p>grep [option] pattern file</p>\n</blockquote>\n<h3 id=\"2．命令功能：\"><a href=\"#2．命令功能：\" class=\"headerlink\" title=\"2．命令功能：\"></a>2．命令功能：</h3><p>用于过滤/搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活。</p>\n<h3 id=\"3．命令参数：\"><a href=\"#3．命令参数：\" class=\"headerlink\" title=\"3．命令参数：\"></a>3．命令参数：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a   --text   #不要忽略二进制的数据。   </span><br><span class=\"line\">-A&lt;显示行数&gt;   --after-context=&lt;显示行数&gt;   #除了显示符合范本样式的那一列之外，并显示该行之后的内容。   </span><br><span class=\"line\">-b   --byte-offset   #在显示符合样式的那一行之前，标示出该行第一个字符的编号。   </span><br><span class=\"line\">-B&lt;显示行数&gt;   --before-context=&lt;显示行数&gt;   #除了显示符合样式的那一行之外，并显示该行之前的内容。   </span><br><span class=\"line\">-c    --count   #计算符合样式的列数。   </span><br><span class=\"line\">-C&lt;显示行数&gt;    --context=&lt;显示行数&gt;或-&lt;显示行数&gt;   #除了显示符合样式的那一行之外，并显示该行之前后的内容。   </span><br><span class=\"line\">-d &lt;动作&gt;      --directories=&lt;动作&gt;   #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。   </span><br><span class=\"line\">-e&lt;范本样式&gt;  --regexp=&lt;范本样式&gt;   #指定字符串做为查找文件内容的样式。   </span><br><span class=\"line\">-E      --extended-regexp   #将样式为延伸的普通表示法来使用。   </span><br><span class=\"line\">-f&lt;规则文件&gt;  --file=&lt;规则文件&gt;   #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。   </span><br><span class=\"line\">-F   --fixed-regexp   #将样式视为固定字符串的列表。   </span><br><span class=\"line\">-G   --basic-regexp   #将样式视为普通的表示法来使用。   </span><br><span class=\"line\">-h   --no-filename   #在显示符合样式的那一行之前，不标示该行所属的文件名称。   </span><br><span class=\"line\">-H   --with-filename   #在显示符合样式的那一行之前，表示该行所属的文件名称。   </span><br><span class=\"line\">-i    --ignore-case   #忽略字符大小写的差别。   </span><br><span class=\"line\">-l    --file-with-matches   #列出文件内容符合指定的样式的文件名称。   </span><br><span class=\"line\">-L   --files-without-match   #列出文件内容不符合指定的样式的文件名称。   </span><br><span class=\"line\">-n   --line-number   #在显示符合样式的那一行之前，标示出该行的列数编号。   </span><br><span class=\"line\">-q   --quiet或--silent   #不显示任何信息。   </span><br><span class=\"line\">-r   --recursive   #此参数的效果和指定“-d recurse”参数相同。   </span><br><span class=\"line\">-s   --no-messages   #不显示错误信息。   </span><br><span class=\"line\">-v   --revert-match   #显示不包含匹配文本的所有行。   </span><br><span class=\"line\">-V   --version   #显示版本信息。   </span><br><span class=\"line\">-w   --word-regexp   #只显示全字符合的列。   </span><br><span class=\"line\">-x    --line-regexp   #只显示全列符合的列。   </span><br><span class=\"line\">-y   #此参数的效果和指定“-i”参数相同。</span><br></pre></td></tr></table></figure>\n<h3 id=\"4．规则表达式：\"><a href=\"#4．规则表达式：\" class=\"headerlink\" title=\"4．规则表达式：\"></a>4．规则表达式：</h3><p>grep的规则表达式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^  #锚定行的开始 如：&apos;^grep&apos;匹配所有以grep开头的行。    </span><br><span class=\"line\">$  #锚定行的结束 如：&apos;grep$&apos;匹配所有以grep结尾的行。    </span><br><span class=\"line\">.  #匹配一个非换行符的字符 如：&apos;gr.p&apos;匹配gr后接一个任意字符，然后是p。    </span><br><span class=\"line\">*  #匹配零个或多个先前字符 如：&apos;*grep&apos;匹配所有一个或多个空格后紧跟grep的行。    </span><br><span class=\"line\">.*   #一起用代表任意字符。   </span><br><span class=\"line\">[]   #匹配一个指定范围内的字符，如&apos;[Gg]rep&apos;匹配Grep和grep。    </span><br><span class=\"line\">[^]  #匹配一个不在指定范围内的字符，如：&apos;[^A-FH-Z]rep&apos;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。    </span><br><span class=\"line\">\\(..\\)  #标记匹配字符，如&apos;\\(love\\)&apos;，love被标记为1。    </span><br><span class=\"line\">\\&lt;      #锚定单词的开始，如:&apos;\\&lt;grep&apos;匹配包含以grep开头的单词的行。    </span><br><span class=\"line\">\\&gt;      #锚定单词的结束，如&apos;grep\\&gt;&apos;匹配包含以grep结尾的单词的行。    </span><br><span class=\"line\">x\\&#123;m\\&#125;  #重复字符x，m次，如：&apos;0\\&#123;5\\&#125;&apos;匹配包含5个o的行。    </span><br><span class=\"line\">x\\&#123;m,\\&#125;  #重复字符x,至少m次，如：&apos;o\\&#123;5,\\&#125;&apos;匹配至少有5个o的行。    </span><br><span class=\"line\">x\\&#123;m,n\\&#125;  #重复字符x，至少m次，不多于n次，如：&apos;o\\&#123;5,10\\&#125;&apos;匹配5--10个o的行。   </span><br><span class=\"line\">\\w    #匹配文字和数字字符，也就是[A-Za-z0-9]，如：&apos;G\\w*p&apos;匹配以G后跟零个或多个文字或数字字符，然后是p。   </span><br><span class=\"line\">\\W    #\\w的反置形式，匹配一个或多个非单词字符，如点号句号等。   </span><br><span class=\"line\">\\b    #单词锁定符，如: &apos;\\bgrep\\b&apos;只匹配grep。</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>POSIX字符:<br>为了在不同国家的字符编码中保持一至，POSIX(The Portable Operating System Interface)增加了特殊的字符类，如[:alnum:]是[A-Za-z0-9]的另一个写法。要把它们放到[]号内才能成为正则表达式，如[A- Za-z0-9]或[[:alnum:]]。在linux下的grep除fgrep外，都支持POSIX的字符类。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[:alnum:]    #文字数字字符   </span><br><span class=\"line\">[:alpha:]    #文字字符   </span><br><span class=\"line\">[:digit:]    #数字字符   </span><br><span class=\"line\">[:graph:]    #非空字符（非空格、控制字符）   </span><br><span class=\"line\">[:lower:]    #小写字符   </span><br><span class=\"line\">[:cntrl:]    #控制字符   </span><br><span class=\"line\">[:print:]    #非空字符（包括空格）   </span><br><span class=\"line\">[:punct:]    #标点符号   </span><br><span class=\"line\">[:space:]    #所有空白字符（新行，空格，制表符）   </span><br><span class=\"line\">[:upper:]    #大写字符   </span><br><span class=\"line\">[:xdigit:]   #十六进制数字（0-9，a-f，A-F）</span><br></pre></td></tr></table></figure>\n","more":"</li>\n<li>grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果模板搜索成功，则返回0，如果搜索不成功，则返回1，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。</li>\n</ul>\n<h3 id=\"1．命令格式：\"><a href=\"#1．命令格式：\" class=\"headerlink\" title=\"1．命令格式：\"></a>1．命令格式：</h3><blockquote>\n<p>grep [option] pattern file</p>\n</blockquote>\n<h3 id=\"2．命令功能：\"><a href=\"#2．命令功能：\" class=\"headerlink\" title=\"2．命令功能：\"></a>2．命令功能：</h3><p>用于过滤/搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活。</p>\n<h3 id=\"3．命令参数：\"><a href=\"#3．命令参数：\" class=\"headerlink\" title=\"3．命令参数：\"></a>3．命令参数：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a   --text   #不要忽略二进制的数据。   </span><br><span class=\"line\">-A&lt;显示行数&gt;   --after-context=&lt;显示行数&gt;   #除了显示符合范本样式的那一列之外，并显示该行之后的内容。   </span><br><span class=\"line\">-b   --byte-offset   #在显示符合样式的那一行之前，标示出该行第一个字符的编号。   </span><br><span class=\"line\">-B&lt;显示行数&gt;   --before-context=&lt;显示行数&gt;   #除了显示符合样式的那一行之外，并显示该行之前的内容。   </span><br><span class=\"line\">-c    --count   #计算符合样式的列数。   </span><br><span class=\"line\">-C&lt;显示行数&gt;    --context=&lt;显示行数&gt;或-&lt;显示行数&gt;   #除了显示符合样式的那一行之外，并显示该行之前后的内容。   </span><br><span class=\"line\">-d &lt;动作&gt;      --directories=&lt;动作&gt;   #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。   </span><br><span class=\"line\">-e&lt;范本样式&gt;  --regexp=&lt;范本样式&gt;   #指定字符串做为查找文件内容的样式。   </span><br><span class=\"line\">-E      --extended-regexp   #将样式为延伸的普通表示法来使用。   </span><br><span class=\"line\">-f&lt;规则文件&gt;  --file=&lt;规则文件&gt;   #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。   </span><br><span class=\"line\">-F   --fixed-regexp   #将样式视为固定字符串的列表。   </span><br><span class=\"line\">-G   --basic-regexp   #将样式视为普通的表示法来使用。   </span><br><span class=\"line\">-h   --no-filename   #在显示符合样式的那一行之前，不标示该行所属的文件名称。   </span><br><span class=\"line\">-H   --with-filename   #在显示符合样式的那一行之前，表示该行所属的文件名称。   </span><br><span class=\"line\">-i    --ignore-case   #忽略字符大小写的差别。   </span><br><span class=\"line\">-l    --file-with-matches   #列出文件内容符合指定的样式的文件名称。   </span><br><span class=\"line\">-L   --files-without-match   #列出文件内容不符合指定的样式的文件名称。   </span><br><span class=\"line\">-n   --line-number   #在显示符合样式的那一行之前，标示出该行的列数编号。   </span><br><span class=\"line\">-q   --quiet或--silent   #不显示任何信息。   </span><br><span class=\"line\">-r   --recursive   #此参数的效果和指定“-d recurse”参数相同。   </span><br><span class=\"line\">-s   --no-messages   #不显示错误信息。   </span><br><span class=\"line\">-v   --revert-match   #显示不包含匹配文本的所有行。   </span><br><span class=\"line\">-V   --version   #显示版本信息。   </span><br><span class=\"line\">-w   --word-regexp   #只显示全字符合的列。   </span><br><span class=\"line\">-x    --line-regexp   #只显示全列符合的列。   </span><br><span class=\"line\">-y   #此参数的效果和指定“-i”参数相同。</span><br></pre></td></tr></table></figure>\n<h3 id=\"4．规则表达式：\"><a href=\"#4．规则表达式：\" class=\"headerlink\" title=\"4．规则表达式：\"></a>4．规则表达式：</h3><p>grep的规则表达式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^  #锚定行的开始 如：&apos;^grep&apos;匹配所有以grep开头的行。    </span><br><span class=\"line\">$  #锚定行的结束 如：&apos;grep$&apos;匹配所有以grep结尾的行。    </span><br><span class=\"line\">.  #匹配一个非换行符的字符 如：&apos;gr.p&apos;匹配gr后接一个任意字符，然后是p。    </span><br><span class=\"line\">*  #匹配零个或多个先前字符 如：&apos;*grep&apos;匹配所有一个或多个空格后紧跟grep的行。    </span><br><span class=\"line\">.*   #一起用代表任意字符。   </span><br><span class=\"line\">[]   #匹配一个指定范围内的字符，如&apos;[Gg]rep&apos;匹配Grep和grep。    </span><br><span class=\"line\">[^]  #匹配一个不在指定范围内的字符，如：&apos;[^A-FH-Z]rep&apos;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。    </span><br><span class=\"line\">\\(..\\)  #标记匹配字符，如&apos;\\(love\\)&apos;，love被标记为1。    </span><br><span class=\"line\">\\&lt;      #锚定单词的开始，如:&apos;\\&lt;grep&apos;匹配包含以grep开头的单词的行。    </span><br><span class=\"line\">\\&gt;      #锚定单词的结束，如&apos;grep\\&gt;&apos;匹配包含以grep结尾的单词的行。    </span><br><span class=\"line\">x\\&#123;m\\&#125;  #重复字符x，m次，如：&apos;0\\&#123;5\\&#125;&apos;匹配包含5个o的行。    </span><br><span class=\"line\">x\\&#123;m,\\&#125;  #重复字符x,至少m次，如：&apos;o\\&#123;5,\\&#125;&apos;匹配至少有5个o的行。    </span><br><span class=\"line\">x\\&#123;m,n\\&#125;  #重复字符x，至少m次，不多于n次，如：&apos;o\\&#123;5,10\\&#125;&apos;匹配5--10个o的行。   </span><br><span class=\"line\">\\w    #匹配文字和数字字符，也就是[A-Za-z0-9]，如：&apos;G\\w*p&apos;匹配以G后跟零个或多个文字或数字字符，然后是p。   </span><br><span class=\"line\">\\W    #\\w的反置形式，匹配一个或多个非单词字符，如点号句号等。   </span><br><span class=\"line\">\\b    #单词锁定符，如: &apos;\\bgrep\\b&apos;只匹配grep。</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>POSIX字符:<br>为了在不同国家的字符编码中保持一至，POSIX(The Portable Operating System Interface)增加了特殊的字符类，如[:alnum:]是[A-Za-z0-9]的另一个写法。要把它们放到[]号内才能成为正则表达式，如[A- Za-z0-9]或[[:alnum:]]。在linux下的grep除fgrep外，都支持POSIX的字符类。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[:alnum:]    #文字数字字符   </span><br><span class=\"line\">[:alpha:]    #文字字符   </span><br><span class=\"line\">[:digit:]    #数字字符   </span><br><span class=\"line\">[:graph:]    #非空字符（非空格、控制字符）   </span><br><span class=\"line\">[:lower:]    #小写字符   </span><br><span class=\"line\">[:cntrl:]    #控制字符   </span><br><span class=\"line\">[:print:]    #非空字符（包括空格）   </span><br><span class=\"line\">[:punct:]    #标点符号   </span><br><span class=\"line\">[:space:]    #所有空白字符（新行，空格，制表符）   </span><br><span class=\"line\">[:upper:]    #大写字符   </span><br><span class=\"line\">[:xdigit:]   #十六进制数字（0-9，a-f，A-F）</span><br></pre></td></tr></table></figure>","categories":[{"name":"linux","path":"api/categories/linux.json"}],"tags":[{"name":"命令","path":"api/tags/命令.json"}]}