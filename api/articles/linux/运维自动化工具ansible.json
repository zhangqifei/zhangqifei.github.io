{"title":"运维自动化工具ansible","slug":"linux/运维自动化工具ansible","date":"2017-08-09T12:42:22.000Z","updated":"2018-04-20T03:37:10.845Z","comments":true,"path":"api/articles/linux/运维自动化工具ansible.json","excerpt":"基本概念ansible是一个基于python开发的轻量级自动化运维管理工具，可以用来批量执行命令，安装程序，支持playbook编排。它通过ssh协议来连接主机，去中心化，相对比puppet和saltstack无需安装客户即可实现文件传输、命令执行、应用部署、配置管理、任务编排等，显得更为简单与轻量。ansible只是提供一种框架，其基于模块工作的，本身没有批量部署。<br>","covers":["http://zhangqifei.top/picture/ansible/4.png","http://zhangqifei.top/picture/ansible/5.png","http://zhangqifei.top/picture/ansible/6.png"],"content":"<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><p>ansible是一个基于python开发的轻量级自动化运维管理工具，可以用来批量执行命令，安装程序，支持playbook编排。它通过ssh协议来连接主机，去中心化，相对比puppet和saltstack无需安装客户即可实现文件传输、命令执行、应用部署、配置管理、任务编排等，显得更为简单与轻量。ansible只是提供一种框架，其基于模块工作的，本身没有批量部署。<br><a id=\"more\"></a></p>\n<h3 id=\"企业级自动化运维工具应用实战ansible\"><a href=\"#企业级自动化运维工具应用实战ansible\" class=\"headerlink\" title=\"企业级自动化运维工具应用实战ansible\"></a>企业级自动化运维工具应用实战ansible</h3><p>公司计划在年底做一次大型市场促销活动，全面冲刺下交易额，为明年的上市做准备。公司要求各业务组对年底大促做准备，运维部要求所有业务容量进行三倍的扩容，并搭建出多套环境可以共开发和测试人员做测试，运维老大为了在年底有所表现，要求运维部门同学尽快实现，当你接到这个任务时，有没有更快的解决方案？</p>\n<h3 id=\"Ansible发展史\"><a href=\"#Ansible发展史\" class=\"headerlink\" title=\"Ansible发展史\"></a>Ansible发展史</h3><p>Ansible</p>\n<ul>\n<li>创始人，Michael DeHaan（Cobbler 与Func 的作者）</li>\n<li>2012-03-09，发布0.0.1版，红帽收购</li>\n<li>2015-10-17，Red Hat宣布收购（据说是1.5 亿美元）</li>\n</ul>\n<p><strong>同类自动化工具GitHub关注程度（2016-07-10）</strong></p>\n<table>\n<thead>\n<tr>\n<th>同类的自动化运维工具</th>\n<th>Watch（关注）</th>\n<th>Star（点赞）</th>\n<th>Fork（复制）</th>\n<th>Contributors(贡献者)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ansible</td>\n<td>1387</td>\n<td>17716</td>\n<td>5356</td>\n<td>1428</td>\n</tr>\n<tr>\n<td>Saltstack</td>\n<td>530</td>\n<td>6678</td>\n<td>3002</td>\n<td>1520</td>\n</tr>\n<tr>\n<td>Puppet</td>\n<td>463</td>\n<td>4044</td>\n<td>1678</td>\n<td>425</td>\n</tr>\n<tr>\n<td>Chef</td>\n<td>383</td>\n<td>4333</td>\n<td>1806</td>\n<td>464</td>\n</tr>\n<tr>\n<td>Fabric</td>\n<td>379</td>\n<td>7334</td>\n<td>1235</td>\n<td>116</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>模块化：调用特定的模块，完成特定任务</li>\n<li>有Paramiko，PyYAML，Jinja2（模板语言）三个关键模块</li>\n<li>支持自定义模块</li>\n<li>基于Python语言实现</li>\n<li>部署简单，基于python和SSH(默认已安装)，agentless</li>\n<li>安全，基于OpenSSH</li>\n<li>支持playbook编排任务</li>\n<li>幂等性：一个任务执行1遍和执行n遍效果一样，不因重复执行带来意外情况</li>\n<li>无需代理不依赖PKI（无需ssl）</li>\n<li>可使用任何编程语言写模块</li>\n<li>YAML格式，编排任务，支持丰富的数据结构</li>\n<li>较强大的多层解决方案</li>\n</ul>\n<h3 id=\"ansible架构\"><a href=\"#ansible架构\" class=\"headerlink\" title=\"ansible架构\"></a>ansible架构</h3><center><img src=\"http://zhangqifei.top/picture/ansible/4.png\" alt=\"ansible架构\"></center>\n\n<h3 id=\"Ansible工作原理\"><a href=\"#Ansible工作原理\" class=\"headerlink\" title=\"Ansible工作原理\"></a>Ansible工作原理</h3><p><center><img src=\"http://zhangqifei.top/picture/ansible/5.png\" alt=\"Ansible工作原理\"></center></p>\n<ul>\n<li>ANSIBLE PLAYBOOKS：任务剧本（任务集），编排定义Ansible任务集的配置文件，由Ansible顺序依次执行，通常是JSON格式的YML文件</li>\n<li>INVENTORY：Ansible管理主机的清单/etc/anaible/hosts</li>\n<li>MODULES：Ansible执行命令的功能模块，多数为内置的核心模块，也可自定义</li>\n<li>PLUGINS：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用</li>\n<li>API：供第三方程序调用的应用程序编程接口</li>\n<li>ANSIBLE：组合INVENTORY、API、MODULES、PLUGINS的绿框，可以理解为是ansible命令工具，其为核心执行工具</li>\n</ul>\n<p><strong>Ansible命令执行来源：</strong></p>\n<ul>\n<li>USER，普通用户，即SYSTEM ADMINISTRATOR</li>\n<li>CMDB（配置管理数据库）API 调用</li>\n<li>PUBLIC/PRIVATE CLOUD API调用</li>\n<li>USER-&gt; Ansible Playbook -&gt; Ansibile</li>\n</ul>\n<p><strong>利用ansible实现管理的方式：</strong></p>\n<ul>\n<li>Ad-Hoc 即ansible命令，主要用于临时命令使用场景</li>\n<li>Ansible-playbook 主要用于长期规划好的，大型项目的场景，需要有前提的规划</li>\n</ul>\n<p><strong>Ansible-playbook（剧本）执行过程：</strong></p>\n<ul>\n<li>将已有编排好的任务集写入Ansible-Playbook</li>\n<li>通过ansible-playbook命令分拆任务集至逐条ansible命令，按预定规则逐条执行</li>\n</ul>\n<p><strong>Ansible主要操作对象：</strong></p>\n<ul>\n<li>HOSTS主机</li>\n<li>NETWORKING网络设备</li>\n</ul>\n<p><strong>注意事项</strong></p>\n<ul>\n<li>执行ansible的主机一般称为主控端，中控，master或堡垒机主控端Py:   thon版本需要2.6或以上</li>\n<li>被控端Python版本小于2.4需要安装python-simplejson</li>\n<li>被控端如开启SELinux需要安装libselinux-python</li>\n<li>windows不能做为主控端</li>\n</ul>\n<h3 id=\"ansible安装-四种方式\"><a href=\"#ansible安装-四种方式\" class=\"headerlink\" title=\"ansible安装(四种方式)\"></a>ansible安装(四种方式)</h3><ul>\n<li>rpm包安装: EPEL源<code>yum install ansible</code></li>\n<li>编译安装:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install python-jinja2 PyYAML python-paramiko </span><br><span class=\"line\">python-babel python-crypto</span><br><span class=\"line\">tar xf ansible-1.5.4.tar.gz</span><br><span class=\"line\">cd ansible-1.5.4</span><br><span class=\"line\">python setup.py build</span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\">mkdir /etc/ansible</span><br><span class=\"line\">cp -r examples/* /etc/ansible</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Git方式安装</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git://github.com/ansible/ansible.git --recursive</span><br><span class=\"line\">cd ./ansible</span><br><span class=\"line\">source ./hacking/env-setup</span><br></pre></td></tr></table></figure>\n<ul>\n<li>pip安装：pip是安装Python包的管理器，类似yum</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install python-pip python-devel</span><br><span class=\"line\">yum install gcc glibc-devel zibl-devel rpm-bulid openssl-devel</span><br><span class=\"line\">pip install  --upgrade pip</span><br><span class=\"line\">pip install ansible--upgrade</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认安装：<code>ansible --version</code></li>\n</ul>\n<h3 id=\"相关文件\"><a href=\"#相关文件\" class=\"headerlink\" title=\"相关文件\"></a>相关文件</h3><p><strong>配置文件</strong><br><code>/etc/ansible/ansible.cfg</code> 主配置文件，配置ansible工作特性<br><code>/etc/ansible/hosts</code> 主机清单<br><code>/etc/ansible/roles/</code> 存放角色的目录</p>\n<p><strong>程序</strong><br><code>/usr/bin/ansible</code> 主程序，临时命令执行工具<br><code>/usr/bin/ansible-doc</code> 查看配置文档，模块功能查看工具<br><code>/usr/bin/ansible-galaxy</code> 下载/上传优秀代码或Roles模块的官网平台<br><code>/usr/bin/ansible-playbook</code> 定制自动化任务，编排剧本工具<br><code>/usr/bin/ansible-pull</code> 远程执行命令的工具<br><code>/usr/bin/ansible-vault</code>  文件加密工具<br><code>/usr/bin/ansible-console</code>  基于Console界面与用户交互的执行工具</p>\n<h4 id=\"主机清单inventory\"><a href=\"#主机清单inventory\" class=\"headerlink\" title=\"主机清单inventory\"></a>主机清单inventory</h4><ul>\n<li>ansible的主要功用在于批量主机操作，为了便捷地使用其中的部分主机，可以在inventory file中将其分组命名</li>\n<li>默认的inventory file为<code>/etc/ansible/hosts</code></li>\n<li>inventory file可以有多个，且也可以通过Dynamic Inventory来动态生成</li>\n</ul>\n<p><strong><code>/etc/ansible/hosts</code>文件格式</strong><br>inventory文件遵循INI文件风格，中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中；此外，当如若目标主机使用了非默认的SSH端口，还可以在主机名称之后使用冒号加端口号来标明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：</span><br><span class=\"line\">[root@centos7 ~]#vim /etc/ansible/hosts</span><br><span class=\"line\">[web]</span><br><span class=\"line\">192.168.109.100</span><br><span class=\"line\">192.168.109.2</span><br><span class=\"line\"></span><br><span class=\"line\">[db]</span><br><span class=\"line\">192.168.109.3</span><br><span class=\"line\">192.168.109.100 //这里默认有个all</span><br><span class=\"line\">[root@centos7 ~]#ansible db -m ping       </span><br><span class=\"line\">192.168.109.100 | SUCCESS =&gt; &#123;</span><br><span class=\"line\">    &quot;changed&quot;: false, </span><br><span class=\"line\">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">192.168.109.3 | SUCCESS =&gt; &#123;</span><br><span class=\"line\">    &quot;changed&quot;: false, </span><br><span class=\"line\">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果主机名称遵循相似的命名模式，还可以使用列表的方式标识各主机<br>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[websrvs]</span><br><span class=\"line\">www[01:100].example.com</span><br><span class=\"line\"></span><br><span class=\"line\">[dbsrvs]</span><br><span class=\"line\">db-[a:f].example.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"ansible-配置文件\"><a href=\"#ansible-配置文件\" class=\"headerlink\" title=\"ansible 配置文件\"></a>ansible 配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ansible 配置文件/etc/ansible/ansible.cfg （一般保持默认）</span><br><span class=\"line\">[defaults]</span><br><span class=\"line\">#inventory      = /etc/ansible/hosts  # 主机列表配置文件</span><br><span class=\"line\">#library        = /usr/share/my_modules/ # 库文件存放目录</span><br><span class=\"line\">#remote_tmp     = $HOME/.ansible/tmp #临时py命令文件存放在远程主机目录</span><br><span class=\"line\">#local_tmp      = $HOME/.ansible/tmp # 本机的临时命令执行目录</span><br><span class=\"line\">#forks          = 5   # 默认并发数</span><br><span class=\"line\">#sudo_user      = root  # 默认sudo 用户</span><br><span class=\"line\">#ask_sudo_pass  = True  #每次执行ansible命令是否询问ssh密码</span><br><span class=\"line\">#ask_pass       = True   </span><br><span class=\"line\">#remote_port    = 22</span><br><span class=\"line\">#host_key_checking = False  #检查对应服务器的host_key，建议取消注释第一次连接不用输入yes</span><br><span class=\"line\">#log_path = /var/log/ansible.log 生成日志文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible系列命令\"><a href=\"#ansible系列命令\" class=\"headerlink\" title=\"ansible系列命令\"></a>ansible系列命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ansible系列命令</span><br><span class=\"line\">ansible    ansible-doc    ansible-playbook    ansible-vault ansible-console    ansible-galaxy    ansible-pull </span><br><span class=\"line\"></span><br><span class=\"line\">ansible-doc:显示模块帮助</span><br><span class=\"line\">ansible-doc [options] [module...]</span><br><span class=\"line\">-a              显示所有模块的文档</span><br><span class=\"line\">-l, --list      列出可用模块</span><br><span class=\"line\">-s, --snippet   显示指定模块的playbook片段</span><br><span class=\"line\">示例：</span><br><span class=\"line\">ansible-doc –l       列出所有模块</span><br><span class=\"line\">ansible-doc ping     查看指定模块帮助用法</span><br><span class=\"line\">ansible-doc –s  ping 查看指定模块帮助用法</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible通过ssh实现配置管理、应用部署、任务执行等功能，建议配置ansible端能基于密钥认证的方式联系各被管理节点</span><br><span class=\"line\"></span><br><span class=\"line\">ansible &lt;host-pattern&gt; [-m module_name] [-a args] </span><br><span class=\"line\">--version           显示版本</span><br><span class=\"line\">-m module           指定模块，默认为command</span><br><span class=\"line\">-v                  详细过程–vv-vvv更详细</span><br><span class=\"line\">--list-hosts        显示主机列表，可简写—list</span><br><span class=\"line\">-k, --ask-pass      提示连接密码，默认Key验证</span><br><span class=\"line\">-K, --ask-become-pass  提示输入sudo</span><br><span class=\"line\">-C, --check            检查，并不执行</span><br><span class=\"line\">-T, --timeout=TIMEOUT  执行命令的超时时间，默认10s</span><br><span class=\"line\">-u, --user=REMOTE_USER 执行远程执行的用户</span><br><span class=\"line\">-b, --become           代替旧版的sudo切换</span><br><span class=\"line\"></span><br><span class=\"line\">ansible的Host-pattern</span><br><span class=\"line\">    匹配主机的列表</span><br><span class=\"line\">    All ：表示所有Inventory中的所有主机</span><br><span class=\"line\">        ansible all –m ping </span><br><span class=\"line\">    *  :通配符</span><br><span class=\"line\">        ansible &quot;*&quot; -m ping </span><br><span class=\"line\">        ansible 192.168.1.* -m ping</span><br><span class=\"line\">        ansible &quot;*srvs&quot;  -m ping</span><br><span class=\"line\">    或关系</span><br><span class=\"line\">        ansible &quot;websrvs:appsrvs&quot;  -m ping</span><br><span class=\"line\">        ansible &quot;192.168.1.10:192.168.1.20&quot; -m ping</span><br><span class=\"line\">    逻辑与</span><br><span class=\"line\">        ansible &quot;websrvs:&amp;dbsrvs&quot; –m ping</span><br><span class=\"line\">        在websrvs组并且在dbsrvs组中的主机</span><br><span class=\"line\">    逻辑非</span><br><span class=\"line\">        ansible &apos;websrvs:!dbsrvs&apos; –m ping</span><br><span class=\"line\">        在websrvs组，但不在dbsrvs组中的主机</span><br><span class=\"line\">    综合逻辑</span><br><span class=\"line\">        ansible &apos;websrvs:dbsrvs:&amp;appsrvs:!ftpsrvs&apos; –m ping</span><br><span class=\"line\">    正则表达式</span><br><span class=\"line\">        ansible &quot;websrvs:&amp;dbsrvs&quot; –m ping</span><br><span class=\"line\">        ansible &quot;~(web|db).*\\.magedu\\.com&quot; –m ping</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible命令执行过程\"><a href=\"#ansible命令执行过程\" class=\"headerlink\" title=\"ansible命令执行过程\"></a>ansible命令执行过程</h3><p>ansible命令执行过程<code>ansible all -m command -a &#39;ls /root&#39;</code></p>\n<ol>\n<li>加载自己的配置文件默认<code>/etc/ansible/ansible.cfg</code></li>\n<li>加载自己对应的模块文件，如command</li>\n<li>通过ansible将模块或命令生成对应的临时py文件，并将该文件传输至远程服务器的对应执行用户<code>$HOME/.ansible/tmp/ansible-tmp-数字/XXX.PY文件</code></li>\n<li>给文件+x执行</li>\n<li>执行并返回结果</li>\n<li>删除临时py文件，sleep 0退出</li>\n</ol>\n<p>执行状态：<br>绿色：执行成功并且不需要做改变的操作<br>黄色：执行成功并且对目标主机做变更<br>红色：执行失败</p>\n<h4 id=\"ansible使用示例\"><a href=\"#ansible使用示例\" class=\"headerlink\" title=\"ansible使用示例\"></a>ansible使用示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以wang用户执行ping存活检测</span><br><span class=\"line\">ansible all -m ping -u wang -k</span><br><span class=\"line\">以wang sudo至root执行ping存活检测</span><br><span class=\"line\">ansible all -m ping -u wang –b -k</span><br><span class=\"line\">以wangsudo至mage用户执行ping存活检测</span><br><span class=\"line\">ansible all -m ping -u wang –b -k --become-user mage</span><br><span class=\"line\">以wang sudo至root用户执行ls</span><br><span class=\"line\">ansible all -m command -u wang--become-user=root -a &apos;ls/root&apos; -b –k -K</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible常用模块\"><a href=\"#ansible常用模块\" class=\"headerlink\" title=\"ansible常用模块\"></a>ansible常用模块</h3><h4 id=\"Command：在远程主机执行命令，默认模块，可忽略-m选项\"><a href=\"#Command：在远程主机执行命令，默认模块，可忽略-m选项\" class=\"headerlink\" title=\"Command：在远程主机执行命令，默认模块，可忽略-m选项\"></a>Command：在远程主机执行命令，默认模块，可忽略-m选项</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令：</span><br><span class=\"line\">chdir：    ＃运行该命令之前，切换到该目录。</span><br><span class=\"line\">creates：  ＃一个文件当它已经存在时，这个步骤将不运行。</span><br><span class=\"line\"></span><br><span class=\"line\">ansible srvs -m command -a &apos;service vsftpd start&apos; </span><br><span class=\"line\">ansible srvs -m command -a &apos;echo magedu |passwd --stdin wang&apos;   不成功此命令不支持$VARNAME &lt; &gt; | ;&amp; 等，用shell模块实现</span><br></pre></td></tr></table></figure>\n<h4 id=\"Shell：和command相似，用shell执行命令\"><a href=\"#Shell：和command相似，用shell执行命令\" class=\"headerlink\" title=\"Shell：和command相似，用shell执行命令\"></a>Shell：和command相似，用shell执行命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m shell -a &apos;echo xxxxx |passwd –stdin wang&apos; </span><br><span class=\"line\">调用bash执行命令类似cat /tmp/stanley.md | awk -F&apos;|&apos; &apos;&#123;print $1,$2&#125;&apos; &amp;&gt; /tmp/example.txt这些复杂命令，即使使用shell也可能会失败，解决办法：写到脚本时，copy到远程，执行，再把需要的结果拉回执行命令的机器</span><br><span class=\"line\">[root@centos7 ~]#ansible all -m shell -a &apos;echo $HOSTNAME&apos;</span><br><span class=\"line\">192.168.109.100 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">centos7.magedu.com</span><br><span class=\"line\">192.168.109.2 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">centos7</span><br><span class=\"line\">192.168.109.3 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">centos6.9</span><br></pre></td></tr></table></figure>\n<h4 id=\"Script：运行脚本\"><a href=\"#Script：运行脚本\" class=\"headerlink\" title=\"Script：运行脚本\"></a>Script：运行脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f1.sh</span><br><span class=\"line\">hostname</span><br><span class=\"line\">date .... 定义了一些脚本等</span><br><span class=\"line\"></span><br><span class=\"line\">snsible websrvs -m script -a &apos;f1.sh&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Copy-从服务器复制文件到客户端\"><a href=\"#Copy-从服务器复制文件到客户端\" class=\"headerlink\" title=\"Copy:从服务器复制文件到客户端,\"></a>Copy:从服务器复制文件到客户端,</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m copy -a &quot;src=/root/f1.sh dest=/tmp/f2.sh    owner=wang mode=600 backup=yes&quot; </span><br><span class=\"line\">如目标存在，默认覆盖，此处指定先备份</span><br><span class=\"line\"></span><br><span class=\"line\">ansible srv -m copy -a &quot;content=&apos;test content\\n&apos; dest=/tmp/f1.txt&quot; 利用内容，直接生成目标文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"cron：计划任务\"><a href=\"#cron：计划任务\" class=\"headerlink\" title=\"cron：计划任务\"></a>cron：计划任务</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">支持时间：minute，hour，day，month，weekday</span><br><span class=\"line\">ansible srv -m cron -a &quot;minute=*/5 job=&apos;/usr/bin/ntpdate 172.16.0.1 &amp;&gt;/dev/null&apos; name=Synctime&quot; 创建任务</span><br><span class=\"line\">ansible srv -a &apos;crontab -l&apos; 查看任务</span><br><span class=\"line\">ansible srv -m cron -a &apos;state=absent name=Synctime&apos;  删除任务</span><br><span class=\"line\">计划任务目录路径 /var/spool/cron/root</span><br><span class=\"line\">ansible srv -m cron -a &apos;disabled=yes job=&quot;/usr/bin/ntpdate 172.16.0.1 &amp;&gt;/dev/null&quot; name=Synctime&apos;</span><br><span class=\"line\">disables=yes 前面加上注释 no的话取消注释</span><br></pre></td></tr></table></figure>\n<h4 id=\"fetch-从客户端取文件至服务器端，copy相反，目录可先tar\"><a href=\"#fetch-从客户端取文件至服务器端，copy相反，目录可先tar\" class=\"headerlink\" title=\"fetch:从客户端取文件至服务器端，copy相反，目录可先tar\"></a>fetch:从客户端取文件至服务器端，copy相反，目录可先tar</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m fetch -a &apos;src=/root/a.sh dest=/data/scripts&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"file：设置文件属性\"><a href=\"#file：设置文件属性\" class=\"headerlink\" title=\"file：设置文件属性\"></a>file：设置文件属性</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m file -a &quot;path=/root/a.sh state=touch owner=wang mode=755&quot; //创建空文件 并设置权限等</span><br><span class=\"line\"></span><br><span class=\"line\">ansible web -m file -a &apos;src=/app/testfile  dest=/app/testfile-link state=link&apos; //创建软连接</span><br></pre></td></tr></table></figure>\n<h4 id=\"hostname：管理主机名\"><a href=\"#hostname：管理主机名\" class=\"headerlink\" title=\"hostname：管理主机名\"></a>hostname：管理主机名</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible web -m hostname -a &quot;name=websrv&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"yum：管理包\"><a href=\"#yum：管理包\" class=\"headerlink\" title=\"yum：管理包\"></a>yum：管理包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m yum -a &apos;name=httpd state=latest&apos;  安装</span><br><span class=\"line\">ansible srv -m yum -a &apos;name=httpd,tftp state=latest&apos;  安装多个</span><br><span class=\"line\">ansible srv -m yum -a &apos;name=httpd state=latest update_cache=yes&apos;  </span><br><span class=\"line\">update_cache=yes 相当于yum clean all</span><br><span class=\"line\">ansible srv -m yum -a &apos;name=httpd state=absent&apos;  删除</span><br></pre></td></tr></table></figure>\n<h4 id=\"service：管理服务\"><a href=\"#service：管理服务\" class=\"headerlink\" title=\"service：管理服务\"></a>service：管理服务</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m service -a &apos;name=httpd state=stopped enabled=yes&apos;关闭并且设置开机启动 不支持多个命令</span><br><span class=\"line\">ansible srv -m service -a &apos;name=httpd state=started&apos;启动</span><br><span class=\"line\">ansible srv –m service –a &apos;name=httpd state=reloaded&apos;</span><br><span class=\"line\">ansible srv -m service -a &apos;name=httpd state=restarted&apos;重启</span><br></pre></td></tr></table></figure>\n<h4 id=\"user：管理用户\"><a href=\"#user：管理用户\" class=\"headerlink\" title=\"user：管理用户\"></a>user：管理用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m user -a &apos;name=user1 comment=&quot;test user&quot; uid=2048 home=/app/user1 group=root&apos;创建普通用户</span><br><span class=\"line\">ansible srv -m user -a &apos;name=sysuser1 system=yes home=/app/sysuser1 &apos;创建系统用户</span><br><span class=\"line\">ansible srv -m user -a &apos;name=user1 state=absent remove=yes&apos; 删除用户及家目录等数据</span><br></pre></td></tr></table></figure>\n<h4 id=\"Group：管理组\"><a href=\"#Group：管理组\" class=\"headerlink\" title=\"Group：管理组\"></a>Group：管理组</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m group -a &quot;name=testgroup system=yes&quot;</span><br><span class=\"line\">ansible srv -m group -a &quot;name=testgroup state=absent&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible系列命令-1\"><a href=\"#ansible系列命令-1\" class=\"headerlink\" title=\"ansible系列命令\"></a>ansible系列命令</h3><h4 id=\"ansible-galaxy\"><a href=\"#ansible-galaxy\" class=\"headerlink\" title=\"ansible-galaxy\"></a>ansible-galaxy</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接https://galaxy.ansible.com 下载相应的roles</span><br><span class=\"line\">中文 http://www.ansible.com.cn/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">列出所有已安装的galaxy </span><br><span class=\"line\">    ansible-galaxy list</span><br><span class=\"line\">安装galaxy</span><br><span class=\"line\">    ansible-galaxy install geerlingguy.redis</span><br><span class=\"line\">删除galaxy</span><br><span class=\"line\">    ansible-galaxy remove geerlingguy.redis</span><br></pre></td></tr></table></figure>\n<h4 id=\"ansible-pull\"><a href=\"#ansible-pull\" class=\"headerlink\" title=\"ansible-pull\"></a>ansible-pull</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-pull</span><br><span class=\"line\">推送命令至远程，效率无限提升，对运维要求较高</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ansible-playbook\"><a href=\"#Ansible-playbook\" class=\"headerlink\" title=\"Ansible-playbook\"></a>Ansible-playbook</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-playbook hello.yml</span><br><span class=\"line\">例子：</span><br><span class=\"line\">vim hello.yml</span><br><span class=\"line\">- hosts: test</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: hello world </span><br><span class=\"line\">    command: wall &quot;hello world&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ansible-vault\"><a href=\"#Ansible-vault\" class=\"headerlink\" title=\"Ansible-vault\"></a>Ansible-vault</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能：管理加密解密yml文件</span><br><span class=\"line\">    ansible-vault [create|decrypt|edit|encrypt|rekey|view]</span><br><span class=\"line\">    ansible-vault encrypt hello.yml 加密</span><br><span class=\"line\">    ansible-vault decrypt hello.yml 解密</span><br><span class=\"line\">    ansible-vault view hello.yml 查看</span><br><span class=\"line\">    ansible-vault edit hello.yml 编辑加密文件</span><br><span class=\"line\">    ansible-vault rekey hello.yml 修改口令</span><br><span class=\"line\">    ansible-vault create new.yml 创建新文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ansible-console\"><a href=\"#Ansible-console\" class=\"headerlink\" title=\"Ansible-console\"></a>Ansible-console</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ansible-console：2.0+新增，可交互执行命令，支持tab</span><br><span class=\"line\">    root@test(2)[f:10] $</span><br><span class=\"line\">        执行用户@当前操作的主机组(当前组的主机数量)[f:并发数]$</span><br><span class=\"line\">    设置并发数：forks n  例如：forks 10</span><br><span class=\"line\">    切换组：cd 主机组例如：cd web</span><br><span class=\"line\">    列出当前组主机列表：list</span><br><span class=\"line\">    列出所有的内置命令：?或help</span><br><span class=\"line\">示例：</span><br><span class=\"line\">root@all (2)[f:5]$ list</span><br><span class=\"line\">root@all (2)[f:5]$ cd appsrvs</span><br><span class=\"line\">root@appsrvs (2)[f:5]$ list </span><br><span class=\"line\">root@appsrvs(2)[f:5]$ yum name=httpd state=present</span><br><span class=\"line\">root@appsrvs(2)[f:5]$ service name=httpd state=started</span><br></pre></td></tr></table></figure>\n<h3 id=\"playbook\"><a href=\"#playbook\" class=\"headerlink\" title=\"playbook\"></a>playbook</h3><ul>\n<li>playbook是由一个或多个“play”组成的列表</li>\n<li>play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。从根本上来讲，所谓task无非是调用ansible的一个module。将多个play组织在一个playbook中，即可以让它们联同起来按事先编排的机制同唱一台大戏</li>\n<li>Playbook采用YAML语言编写</li>\n</ul>\n<p><center><img src=\"http://zhangqifei.top/picture/ansible/6.png\" alt=\"playbook\"></center></p>\n<h4 id=\"YAML介绍\"><a href=\"#YAML介绍\" class=\"headerlink\" title=\"YAML介绍\"></a>YAML介绍</h4><ul>\n<li>YAML是一个可读性高的用来表达资料序列的格式。YAML参考了其他多种语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822等。Clark Evans在2001年在首次发表了这种语言，另外IngydötNet与Oren Ben-Kiki也是这语言的共同设计者</li>\n<li>YAML Ain’tMarkup Language，即YAML不是XML。不过，在开发的这种语言时，YAML的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）</li>\n<li>特性<ul>\n<li>YAML的可读性好</li>\n<li>YAML和脚本语言的交互性好</li>\n<li>YAML使用实现语言的数据类型</li>\n<li>YAML有一个一致的信息模型</li>\n<li>YAML易于实现</li>\n<li>YAML可以基于流来处理</li>\n<li>YAML表达能力强，扩展性好</li>\n</ul>\n</li>\n</ul>\n<p>更多的内容及规范参见<a href=\"http://www.yaml.org\" target=\"_blank\" rel=\"noopener\">http://www.yaml.org</a></p>\n<h4 id=\"YAML语法简介\"><a href=\"#YAML语法简介\" class=\"headerlink\" title=\"YAML语法简介\"></a>YAML语法简介</h4><ul>\n<li>在单一档案中，可用连续三个连字号(——)区分多个档案。另外，还有选择性的连续三个点号( … )用来表示档案结尾</li>\n<li>次行开始正常写Playbook的内容，一般建议写明该Playbook的功能</li>\n<li>使用#号注释代码</li>\n<li>缩进必须是统一的，不能空格和tab混用</li>\n<li>缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判别配置的级别是通过缩进结合换行来实现的</li>\n<li>YAML文件内容和Linux系统大小写判断方式保持一致，是区别大小写的，k/v的值均需大小写敏感</li>\n<li>k/v的值可同行写也可换行写。同行使用:分隔</li>\n<li>v可是个字符串，也可是另一个列表一个完整的代码块功能需最少元素需包括name: task</li>\n<li>一个name只能包括一个task</li>\n<li>YAML文件扩展名通常为yml或yaml</li>\n</ul>\n<h5 id=\"YAML语法简介-1\"><a href=\"#YAML语法简介-1\" class=\"headerlink\" title=\"YAML语法简介\"></a>YAML语法简介</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dictionary：字典，通常由多个key与value构成</span><br><span class=\"line\">示例：</span><br><span class=\"line\">---</span><br><span class=\"line\"># An employee record</span><br><span class=\"line\">name: Example Developer</span><br><span class=\"line\">job: Developers</span><br><span class=\"line\">kill: Elite</span><br><span class=\"line\">也可以将key:value放置于&#123;&#125;中进行表示，用,分隔多个key:value</span><br><span class=\"line\">示例：</span><br><span class=\"line\">---</span><br><span class=\"line\"># An employee record</span><br><span class=\"line\">&#123;name: Example Developer, job: Developer, skill: Elite&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"YAML语法\"><a href=\"#YAML语法\" class=\"headerlink\" title=\"YAML语法\"></a>YAML语法</h3><p>YAML的语法和其他高阶语言类似，并且可以简单表达清单、散列表、标量等数据结构。其结构（Structure）通过空格来展示，序列（Sequence）里的项用”-“来代表，Map里的键值对用”:”分隔<br>示例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: John Smith</span><br><span class=\"line\">age: 41</span><br><span class=\"line\">gender: Male</span><br><span class=\"line\">spouse:</span><br><span class=\"line\">  name: Jane Smith</span><br><span class=\"line\">  age: 37</span><br><span class=\"line\">  gender: Female</span><br><span class=\"line\">children:</span><br><span class=\"line\">  - name: Jimmy Smith</span><br><span class=\"line\">    age: 17</span><br><span class=\"line\">    gender: Male</span><br><span class=\"line\">  - name: Jenny Smith</span><br><span class=\"line\">    age 13</span><br><span class=\"line\">    gender: Female</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Playbook核心元素\"><a href=\"#Playbook核心元素\" class=\"headerlink\" title=\"Playbook核心元素\"></a>Playbook核心元素</h3><ul>\n<li>Hosts      执行的远程主机列表</li>\n<li>Tasks      任务集</li>\n<li>Varniables 内置变量或自定义变量在playbook中调用</li>\n<li>Templates  模板，可替换模板文件中的变量并实现一些简单逻辑的文件</li>\n<li>Handlers   和notity结合使用，由特定条件触发的操作，满足条件方才执行，否则不执行</li>\n<li>tags       标签指定某条任务执行，用于选择运行playbook中的部分代码。ansible具有幂等性，因此会自动跳过没有变化的部分，即便如此，有些代码为测试其确实没有发生变化的时间依然会非常地长。此时，如果确信其没有变化，就可以通过tags跳过此些代码片断<code>ansible-playbook –t tagsname useradd.yml</code><br>示例:安装httpd 并且开机启动<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim test1.yml</span><br><span class=\"line\">- hosts: web</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: install package</span><br><span class=\"line\">      yum: name=httpd start=present</span><br><span class=\"line\">    - name: start service</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\">      </span><br><span class=\"line\">ansible-playbook test1.yml 执行</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"playbook基础组件\"><a href=\"#playbook基础组件\" class=\"headerlink\" title=\"playbook基础组件\"></a>playbook基础组件</h5><ul>\n<li>Hosts：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">playbook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。hosts用于指定要执行指定任务的主机，须事先定义在主机清单中</span><br><span class=\"line\">可以是如下形式：</span><br><span class=\"line\">one.example.com</span><br><span class=\"line\">one.example.com:two.example.com</span><br><span class=\"line\">192.168.1.50</span><br><span class=\"line\">192.168.1.*</span><br><span class=\"line\"></span><br><span class=\"line\">Websrvs:dbsrvs两个组的并集</span><br><span class=\"line\">Websrvs:&amp;dbsrvs两个组的交集</span><br><span class=\"line\">webservers:!phoenix  在websrvs组，但不在dbsrvs组</span><br><span class=\"line\">示例:-hosts: websrvs：dbsrvs</span><br></pre></td></tr></table></figure>\n<ul>\n<li>remote_user: </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可用于Host和task中。也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务；此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</span><br><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    -name: test connection</span><br><span class=\"line\">    ping: </span><br><span class=\"line\">    remote_user: magedu</span><br><span class=\"line\">    sudo: yes       默认sudo为root</span><br><span class=\"line\">    sudo_user:wang  sudo为wang</span><br></pre></td></tr></table></figure>\n<ul>\n<li>task列表和action</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">play的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个任务后再开始第二个。在运行自下而下某playbook时，如果中途发生错误，所有已执行任务都将回滚，因此，在更正playbook后重新执行一次即可</span><br><span class=\"line\"></span><br><span class=\"line\">task的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。模块执行是幂等的，这意味着多次执行是安全的，因为其结果均一致</span><br><span class=\"line\"></span><br><span class=\"line\">每个task都应该有其name，用于playbook的执行结果输出，建议其内容尽可能清晰地描述任务执行步骤。如果未提供name，则action的结果将用于输出</span><br></pre></td></tr></table></figure>\n<ul>\n<li>tasks：任务列表<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\">    (1) action: module arguments</span><br><span class=\"line\">    (2) module: arguments 建议使用</span><br><span class=\"line\">    注意：shell和command模块后面跟命令，而非key=value</span><br><span class=\"line\">某任务的状态在运行后为changed时，可通过“notify&quot;通知给相应的handlers</span><br><span class=\"line\">任务可以通过&quot;tags&quot;打标签，而后可在ansible-playbook命令上使用-t指定进行调用</span><br><span class=\"line\">示例：</span><br><span class=\"line\">tasks:</span><br><span class=\"line\">  - name: disable selinux</span><br><span class=\"line\">    command: /sbin/setenforce 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果命令或脚本的退出码不为零，可以使用如下方式替代</span><br><span class=\"line\">tasks:</span><br><span class=\"line\">  - name: run this command and ignore the result</span><br><span class=\"line\">    shell: /usr/bin/somecommand|| /bin/true</span><br><span class=\"line\"></span><br><span class=\"line\">或者使用ignore_errors来忽略错误信息：</span><br><span class=\"line\">tasks:</span><br><span class=\"line\">  - name: run this command and ignore the result</span><br><span class=\"line\">    shell: /usr/bin/somecommand</span><br><span class=\"line\">    ignore_errors: True</span><br><span class=\"line\">    </span><br><span class=\"line\">运行playbook的方式</span><br><span class=\"line\">    ansible-playbook &lt;filename.yml&gt; ... [options]</span><br><span class=\"line\">常见选项</span><br><span class=\"line\">    --check 只检测可能会发生的改变，但不真正执行操作</span><br><span class=\"line\">    --list-hosts 列出运行任务的主机</span><br><span class=\"line\">    --limit 主机列表只针对主机列表中的主机执行</span><br><span class=\"line\">    -v 显示过程-vv-vvv更详细</span><br><span class=\"line\">示例</span><br><span class=\"line\">    ansible-playbook  file.yml --check 只检测</span><br><span class=\"line\">    ansible-playbook  file.yml </span><br><span class=\"line\">    ansible-playbook  file.yml --limit websrvs</span><br></pre></td></tr></table></figure>\n<h4 id=\"Playbook-VS-ShellScripts\"><a href=\"#Playbook-VS-ShellScripts\" class=\"headerlink\" title=\"Playbook VS ShellScripts\"></a>Playbook VS ShellScripts</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHELL脚本</span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"># 安装Apache</span><br><span class=\"line\">yum install --quiet -y httpd</span><br><span class=\"line\"># 复制配置文件</span><br><span class=\"line\">cp /path/to/config/httpd.conf /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">cp /path/to/httpd-vhosts.conf /etc/httpd/conf/httpd-vhosts.conf</span><br><span class=\"line\"># 启动Apache，并设置开机启动</span><br><span class=\"line\">service httpd start </span><br><span class=\"line\">chkconfig httpd on</span><br><span class=\"line\"></span><br><span class=\"line\">Playbook定义</span><br><span class=\"line\">---</span><br><span class=\"line\">  - hosts: all</span><br><span class=\"line\">    tasks: </span><br><span class=\"line\">      - name: &quot;安装Apache&quot;</span><br><span class=\"line\">        command: yum install -q -y httpd</span><br><span class=\"line\">      - name: &quot;复制配置文件&quot;</span><br><span class=\"line\">        command: cp /tmp/httpd.conf/ etc/httpd/conf/httpd.conf</span><br><span class=\"line\">        command: cp /tmp/httpd-vhosts.conf/ etc/httpd/conf/httpd-vhosts.conf</span><br><span class=\"line\">      - name: &quot;启动Apache，并设置开机启动&quot;</span><br><span class=\"line\">        service: name=httpd state=started enabled=yes</span><br></pre></td></tr></table></figure>\n<h5 id=\"示例system-yml：\"><a href=\"#示例system-yml：\" class=\"headerlink\" title=\"示例system.yml：\"></a>示例system.yml：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">  - hosts: allre</span><br><span class=\"line\">    mote_user: root</span><br><span class=\"line\">    </span><br><span class=\"line\">    tasks:</span><br><span class=\"line\">      - name: create mysql user</span><br><span class=\"line\">        user: name=mysql system=yes uid=36</span><br><span class=\"line\">      - name: create a group </span><br><span class=\"line\">        group: name=httpd system=yes</span><br></pre></td></tr></table></figure>\n<h4 id=\"Playbook示例\"><a href=\"#Playbook示例\" class=\"headerlink\" title=\"Playbook示例\"></a>Playbook示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：httpd.yml</span><br><span class=\"line\"></span><br><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: Install httpd</span><br><span class=\"line\">      yum: name=httpd state=present</span><br><span class=\"line\">    - name: Install configure file</span><br><span class=\"line\">      copy: src=files/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">    - name: start service</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br></pre></td></tr></table></figure>\n<h4 id=\"handlers和notify结合使用触发条件\"><a href=\"#handlers和notify结合使用触发条件\" class=\"headerlink\" title=\"handlers和notify结合使用触发条件\"></a>handlers和notify结合使用触发条件</h4><ul>\n<li>Handlers</li>\n<li>是task列表，这些task与前述的task并没有本质上的不同,用于当关注的资源发生变化时，才会采取一定的操作</li>\n<li>notify这个action可用于在每个play的最后被触发，这样可以避免多次有改变发生时每次都执行指定的操作，仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler，也即notify中调用handler中定义的操作</li>\n</ul>\n<h4 id=\"Playbook中handlers使用\"><a href=\"#Playbook中handlers使用\" class=\"headerlink\" title=\"Playbook中handlers使用\"></a>Playbook中handlers使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts:websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: Install httpd </span><br><span class=\"line\">      yum: name=httpd state=present</span><br><span class=\"line\">    - name: Install configure file</span><br><span class=\"line\">      copy: src=files/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">      notify: restart httpd</span><br><span class=\"line\">    - name: ensure apache is running</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\">    </span><br><span class=\"line\">    handlers:</span><br><span class=\"line\">      - name: restart httpd</span><br><span class=\"line\">        service: name=httpd status=restarted</span><br></pre></td></tr></table></figure>\n<p>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: add group nginx</span><br><span class=\"line\">      tags: user</span><br><span class=\"line\">      user: name=nginx state=present</span><br><span class=\"line\">    - name: add user nginx</span><br><span class=\"line\">      user: name=nginx state=present group=nginx</span><br><span class=\"line\">    - name: Install Nginx</span><br><span class=\"line\">      yum: name=nginx state=present</span><br><span class=\"line\">    - name: config </span><br><span class=\"line\">      copy: src=/root/config.txt dest=/etc/nginx/nginx.conf</span><br><span class=\"line\">      notify:</span><br><span class=\"line\">        - Restart Nginx</span><br><span class=\"line\">        - Check Nginx Process</span><br><span class=\"line\">    </span><br><span class=\"line\">    handlers:</span><br><span class=\"line\">      - name: Restart Nginx</span><br><span class=\"line\">        service: name=nginx state=restarted enabled=yes</span><br><span class=\"line\">      - name: Check Nginx process</span><br><span class=\"line\">        shell:  killall -0 nginx &gt; /tmp/nginx.log</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Playbook中tags使用\"><a href=\"#Playbook中tags使用\" class=\"headerlink\" title=\"Playbook中tags使用\"></a>Playbook中tags使用</h4><p>示例：httpd.yml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: Install httpd</span><br><span class=\"line\">      yum: name=httpd state=present</span><br><span class=\"line\">    - name: Install configure file</span><br><span class=\"line\">      copy: src=files/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">      tags: conf</span><br><span class=\"line\">    - name: start httpd service</span><br><span class=\"line\">      tags: service</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes </span><br><span class=\"line\">      </span><br><span class=\"line\">ansible-playbook –t conf httpd.yml</span><br><span class=\"line\">    -t //--tags</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"综合实例：安装httpd-并且启动端口是8080\"><a href=\"#综合实例：安装httpd-并且启动端口是8080\" class=\"headerlink\" title=\"综合实例：安装httpd 并且启动端口是8080\"></a>综合实例：安装httpd 并且启动端口是8080</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本机先安装httpd 把httpd配置文件 /etc/httpd/conf/httpd.conf 里面端口改为8080</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 app]#cat httpd.yml </span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: web</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\"></span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: install httpd</span><br><span class=\"line\">      yum: name=httpd</span><br><span class=\"line\">    - name: copy config file</span><br><span class=\"line\">      copy: src=/app/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">    - name: start httpd</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\">      </span><br><span class=\"line\">[root@centos7 app]#ansible-playbook httpd.yml</span><br><span class=\"line\">现在把端口改为80</span><br><span class=\"line\">[root@centos7 app]#cat httpd.yml </span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: web</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\"></span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: install httpd</span><br><span class=\"line\">      yum: name=httpd</span><br><span class=\"line\">    - name: copy config file</span><br><span class=\"line\">      copy: src=/app/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">      notify: restart httpd</span><br><span class=\"line\">    - name: start httpd</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  handlers:</span><br><span class=\"line\">    - name: restart httpd</span><br><span class=\"line\">      service: name=httpd state=restarted</span><br><span class=\"line\">[root@centos7 app]#ansible-playbook --limit 192.18.109.1  httpd.yml 只针对这一台机器</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 app]#ansible web -m shell -a &apos;ss -ntl|grep 80&apos;</span><br><span class=\"line\">192.168.109.100 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">LISTEN     0      128         :::80                      :::*                 </span><br><span class=\"line\">192.168.109.2 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">LISTEN     0      128         :::80                      :::*</span><br></pre></td></tr></table></figure>\n","more":"</p>\n<h3 id=\"企业级自动化运维工具应用实战ansible\"><a href=\"#企业级自动化运维工具应用实战ansible\" class=\"headerlink\" title=\"企业级自动化运维工具应用实战ansible\"></a>企业级自动化运维工具应用实战ansible</h3><p>公司计划在年底做一次大型市场促销活动，全面冲刺下交易额，为明年的上市做准备。公司要求各业务组对年底大促做准备，运维部要求所有业务容量进行三倍的扩容，并搭建出多套环境可以共开发和测试人员做测试，运维老大为了在年底有所表现，要求运维部门同学尽快实现，当你接到这个任务时，有没有更快的解决方案？</p>\n<h3 id=\"Ansible发展史\"><a href=\"#Ansible发展史\" class=\"headerlink\" title=\"Ansible发展史\"></a>Ansible发展史</h3><p>Ansible</p>\n<ul>\n<li>创始人，Michael DeHaan（Cobbler 与Func 的作者）</li>\n<li>2012-03-09，发布0.0.1版，红帽收购</li>\n<li>2015-10-17，Red Hat宣布收购（据说是1.5 亿美元）</li>\n</ul>\n<p><strong>同类自动化工具GitHub关注程度（2016-07-10）</strong></p>\n<table>\n<thead>\n<tr>\n<th>同类的自动化运维工具</th>\n<th>Watch（关注）</th>\n<th>Star（点赞）</th>\n<th>Fork（复制）</th>\n<th>Contributors(贡献者)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ansible</td>\n<td>1387</td>\n<td>17716</td>\n<td>5356</td>\n<td>1428</td>\n</tr>\n<tr>\n<td>Saltstack</td>\n<td>530</td>\n<td>6678</td>\n<td>3002</td>\n<td>1520</td>\n</tr>\n<tr>\n<td>Puppet</td>\n<td>463</td>\n<td>4044</td>\n<td>1678</td>\n<td>425</td>\n</tr>\n<tr>\n<td>Chef</td>\n<td>383</td>\n<td>4333</td>\n<td>1806</td>\n<td>464</td>\n</tr>\n<tr>\n<td>Fabric</td>\n<td>379</td>\n<td>7334</td>\n<td>1235</td>\n<td>116</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>模块化：调用特定的模块，完成特定任务</li>\n<li>有Paramiko，PyYAML，Jinja2（模板语言）三个关键模块</li>\n<li>支持自定义模块</li>\n<li>基于Python语言实现</li>\n<li>部署简单，基于python和SSH(默认已安装)，agentless</li>\n<li>安全，基于OpenSSH</li>\n<li>支持playbook编排任务</li>\n<li>幂等性：一个任务执行1遍和执行n遍效果一样，不因重复执行带来意外情况</li>\n<li>无需代理不依赖PKI（无需ssl）</li>\n<li>可使用任何编程语言写模块</li>\n<li>YAML格式，编排任务，支持丰富的数据结构</li>\n<li>较强大的多层解决方案</li>\n</ul>\n<h3 id=\"ansible架构\"><a href=\"#ansible架构\" class=\"headerlink\" title=\"ansible架构\"></a>ansible架构</h3><center><img src=\"http://zhangqifei.top/picture/ansible/4.png\" alt=\"ansible架构\"></center>\n\n<h3 id=\"Ansible工作原理\"><a href=\"#Ansible工作原理\" class=\"headerlink\" title=\"Ansible工作原理\"></a>Ansible工作原理</h3><p><center><img src=\"http://zhangqifei.top/picture/ansible/5.png\" alt=\"Ansible工作原理\"></center></p>\n<ul>\n<li>ANSIBLE PLAYBOOKS：任务剧本（任务集），编排定义Ansible任务集的配置文件，由Ansible顺序依次执行，通常是JSON格式的YML文件</li>\n<li>INVENTORY：Ansible管理主机的清单/etc/anaible/hosts</li>\n<li>MODULES：Ansible执行命令的功能模块，多数为内置的核心模块，也可自定义</li>\n<li>PLUGINS：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用</li>\n<li>API：供第三方程序调用的应用程序编程接口</li>\n<li>ANSIBLE：组合INVENTORY、API、MODULES、PLUGINS的绿框，可以理解为是ansible命令工具，其为核心执行工具</li>\n</ul>\n<p><strong>Ansible命令执行来源：</strong></p>\n<ul>\n<li>USER，普通用户，即SYSTEM ADMINISTRATOR</li>\n<li>CMDB（配置管理数据库）API 调用</li>\n<li>PUBLIC/PRIVATE CLOUD API调用</li>\n<li>USER-&gt; Ansible Playbook -&gt; Ansibile</li>\n</ul>\n<p><strong>利用ansible实现管理的方式：</strong></p>\n<ul>\n<li>Ad-Hoc 即ansible命令，主要用于临时命令使用场景</li>\n<li>Ansible-playbook 主要用于长期规划好的，大型项目的场景，需要有前提的规划</li>\n</ul>\n<p><strong>Ansible-playbook（剧本）执行过程：</strong></p>\n<ul>\n<li>将已有编排好的任务集写入Ansible-Playbook</li>\n<li>通过ansible-playbook命令分拆任务集至逐条ansible命令，按预定规则逐条执行</li>\n</ul>\n<p><strong>Ansible主要操作对象：</strong></p>\n<ul>\n<li>HOSTS主机</li>\n<li>NETWORKING网络设备</li>\n</ul>\n<p><strong>注意事项</strong></p>\n<ul>\n<li>执行ansible的主机一般称为主控端，中控，master或堡垒机主控端Py:   thon版本需要2.6或以上</li>\n<li>被控端Python版本小于2.4需要安装python-simplejson</li>\n<li>被控端如开启SELinux需要安装libselinux-python</li>\n<li>windows不能做为主控端</li>\n</ul>\n<h3 id=\"ansible安装-四种方式\"><a href=\"#ansible安装-四种方式\" class=\"headerlink\" title=\"ansible安装(四种方式)\"></a>ansible安装(四种方式)</h3><ul>\n<li>rpm包安装: EPEL源<code>yum install ansible</code></li>\n<li>编译安装:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install python-jinja2 PyYAML python-paramiko </span><br><span class=\"line\">python-babel python-crypto</span><br><span class=\"line\">tar xf ansible-1.5.4.tar.gz</span><br><span class=\"line\">cd ansible-1.5.4</span><br><span class=\"line\">python setup.py build</span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\">mkdir /etc/ansible</span><br><span class=\"line\">cp -r examples/* /etc/ansible</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Git方式安装</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git://github.com/ansible/ansible.git --recursive</span><br><span class=\"line\">cd ./ansible</span><br><span class=\"line\">source ./hacking/env-setup</span><br></pre></td></tr></table></figure>\n<ul>\n<li>pip安装：pip是安装Python包的管理器，类似yum</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install python-pip python-devel</span><br><span class=\"line\">yum install gcc glibc-devel zibl-devel rpm-bulid openssl-devel</span><br><span class=\"line\">pip install  --upgrade pip</span><br><span class=\"line\">pip install ansible--upgrade</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认安装：<code>ansible --version</code></li>\n</ul>\n<h3 id=\"相关文件\"><a href=\"#相关文件\" class=\"headerlink\" title=\"相关文件\"></a>相关文件</h3><p><strong>配置文件</strong><br><code>/etc/ansible/ansible.cfg</code> 主配置文件，配置ansible工作特性<br><code>/etc/ansible/hosts</code> 主机清单<br><code>/etc/ansible/roles/</code> 存放角色的目录</p>\n<p><strong>程序</strong><br><code>/usr/bin/ansible</code> 主程序，临时命令执行工具<br><code>/usr/bin/ansible-doc</code> 查看配置文档，模块功能查看工具<br><code>/usr/bin/ansible-galaxy</code> 下载/上传优秀代码或Roles模块的官网平台<br><code>/usr/bin/ansible-playbook</code> 定制自动化任务，编排剧本工具<br><code>/usr/bin/ansible-pull</code> 远程执行命令的工具<br><code>/usr/bin/ansible-vault</code>  文件加密工具<br><code>/usr/bin/ansible-console</code>  基于Console界面与用户交互的执行工具</p>\n<h4 id=\"主机清单inventory\"><a href=\"#主机清单inventory\" class=\"headerlink\" title=\"主机清单inventory\"></a>主机清单inventory</h4><ul>\n<li>ansible的主要功用在于批量主机操作，为了便捷地使用其中的部分主机，可以在inventory file中将其分组命名</li>\n<li>默认的inventory file为<code>/etc/ansible/hosts</code></li>\n<li>inventory file可以有多个，且也可以通过Dynamic Inventory来动态生成</li>\n</ul>\n<p><strong><code>/etc/ansible/hosts</code>文件格式</strong><br>inventory文件遵循INI文件风格，中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中；此外，当如若目标主机使用了非默认的SSH端口，还可以在主机名称之后使用冒号加端口号来标明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例：</span><br><span class=\"line\">[root@centos7 ~]#vim /etc/ansible/hosts</span><br><span class=\"line\">[web]</span><br><span class=\"line\">192.168.109.100</span><br><span class=\"line\">192.168.109.2</span><br><span class=\"line\"></span><br><span class=\"line\">[db]</span><br><span class=\"line\">192.168.109.3</span><br><span class=\"line\">192.168.109.100 //这里默认有个all</span><br><span class=\"line\">[root@centos7 ~]#ansible db -m ping       </span><br><span class=\"line\">192.168.109.100 | SUCCESS =&gt; &#123;</span><br><span class=\"line\">    &quot;changed&quot;: false, </span><br><span class=\"line\">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">192.168.109.3 | SUCCESS =&gt; &#123;</span><br><span class=\"line\">    &quot;changed&quot;: false, </span><br><span class=\"line\">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果主机名称遵循相似的命名模式，还可以使用列表的方式标识各主机<br>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[websrvs]</span><br><span class=\"line\">www[01:100].example.com</span><br><span class=\"line\"></span><br><span class=\"line\">[dbsrvs]</span><br><span class=\"line\">db-[a:f].example.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"ansible-配置文件\"><a href=\"#ansible-配置文件\" class=\"headerlink\" title=\"ansible 配置文件\"></a>ansible 配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ansible 配置文件/etc/ansible/ansible.cfg （一般保持默认）</span><br><span class=\"line\">[defaults]</span><br><span class=\"line\">#inventory      = /etc/ansible/hosts  # 主机列表配置文件</span><br><span class=\"line\">#library        = /usr/share/my_modules/ # 库文件存放目录</span><br><span class=\"line\">#remote_tmp     = $HOME/.ansible/tmp #临时py命令文件存放在远程主机目录</span><br><span class=\"line\">#local_tmp      = $HOME/.ansible/tmp # 本机的临时命令执行目录</span><br><span class=\"line\">#forks          = 5   # 默认并发数</span><br><span class=\"line\">#sudo_user      = root  # 默认sudo 用户</span><br><span class=\"line\">#ask_sudo_pass  = True  #每次执行ansible命令是否询问ssh密码</span><br><span class=\"line\">#ask_pass       = True   </span><br><span class=\"line\">#remote_port    = 22</span><br><span class=\"line\">#host_key_checking = False  #检查对应服务器的host_key，建议取消注释第一次连接不用输入yes</span><br><span class=\"line\">#log_path = /var/log/ansible.log 生成日志文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible系列命令\"><a href=\"#ansible系列命令\" class=\"headerlink\" title=\"ansible系列命令\"></a>ansible系列命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ansible系列命令</span><br><span class=\"line\">ansible    ansible-doc    ansible-playbook    ansible-vault ansible-console    ansible-galaxy    ansible-pull </span><br><span class=\"line\"></span><br><span class=\"line\">ansible-doc:显示模块帮助</span><br><span class=\"line\">ansible-doc [options] [module...]</span><br><span class=\"line\">-a              显示所有模块的文档</span><br><span class=\"line\">-l, --list      列出可用模块</span><br><span class=\"line\">-s, --snippet   显示指定模块的playbook片段</span><br><span class=\"line\">示例：</span><br><span class=\"line\">ansible-doc –l       列出所有模块</span><br><span class=\"line\">ansible-doc ping     查看指定模块帮助用法</span><br><span class=\"line\">ansible-doc –s  ping 查看指定模块帮助用法</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible通过ssh实现配置管理、应用部署、任务执行等功能，建议配置ansible端能基于密钥认证的方式联系各被管理节点</span><br><span class=\"line\"></span><br><span class=\"line\">ansible &lt;host-pattern&gt; [-m module_name] [-a args] </span><br><span class=\"line\">--version           显示版本</span><br><span class=\"line\">-m module           指定模块，默认为command</span><br><span class=\"line\">-v                  详细过程–vv-vvv更详细</span><br><span class=\"line\">--list-hosts        显示主机列表，可简写—list</span><br><span class=\"line\">-k, --ask-pass      提示连接密码，默认Key验证</span><br><span class=\"line\">-K, --ask-become-pass  提示输入sudo</span><br><span class=\"line\">-C, --check            检查，并不执行</span><br><span class=\"line\">-T, --timeout=TIMEOUT  执行命令的超时时间，默认10s</span><br><span class=\"line\">-u, --user=REMOTE_USER 执行远程执行的用户</span><br><span class=\"line\">-b, --become           代替旧版的sudo切换</span><br><span class=\"line\"></span><br><span class=\"line\">ansible的Host-pattern</span><br><span class=\"line\">    匹配主机的列表</span><br><span class=\"line\">    All ：表示所有Inventory中的所有主机</span><br><span class=\"line\">        ansible all –m ping </span><br><span class=\"line\">    *  :通配符</span><br><span class=\"line\">        ansible &quot;*&quot; -m ping </span><br><span class=\"line\">        ansible 192.168.1.* -m ping</span><br><span class=\"line\">        ansible &quot;*srvs&quot;  -m ping</span><br><span class=\"line\">    或关系</span><br><span class=\"line\">        ansible &quot;websrvs:appsrvs&quot;  -m ping</span><br><span class=\"line\">        ansible &quot;192.168.1.10:192.168.1.20&quot; -m ping</span><br><span class=\"line\">    逻辑与</span><br><span class=\"line\">        ansible &quot;websrvs:&amp;dbsrvs&quot; –m ping</span><br><span class=\"line\">        在websrvs组并且在dbsrvs组中的主机</span><br><span class=\"line\">    逻辑非</span><br><span class=\"line\">        ansible &apos;websrvs:!dbsrvs&apos; –m ping</span><br><span class=\"line\">        在websrvs组，但不在dbsrvs组中的主机</span><br><span class=\"line\">    综合逻辑</span><br><span class=\"line\">        ansible &apos;websrvs:dbsrvs:&amp;appsrvs:!ftpsrvs&apos; –m ping</span><br><span class=\"line\">    正则表达式</span><br><span class=\"line\">        ansible &quot;websrvs:&amp;dbsrvs&quot; –m ping</span><br><span class=\"line\">        ansible &quot;~(web|db).*\\.magedu\\.com&quot; –m ping</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible命令执行过程\"><a href=\"#ansible命令执行过程\" class=\"headerlink\" title=\"ansible命令执行过程\"></a>ansible命令执行过程</h3><p>ansible命令执行过程<code>ansible all -m command -a &#39;ls /root&#39;</code></p>\n<ol>\n<li>加载自己的配置文件默认<code>/etc/ansible/ansible.cfg</code></li>\n<li>加载自己对应的模块文件，如command</li>\n<li>通过ansible将模块或命令生成对应的临时py文件，并将该文件传输至远程服务器的对应执行用户<code>$HOME/.ansible/tmp/ansible-tmp-数字/XXX.PY文件</code></li>\n<li>给文件+x执行</li>\n<li>执行并返回结果</li>\n<li>删除临时py文件，sleep 0退出</li>\n</ol>\n<p>执行状态：<br>绿色：执行成功并且不需要做改变的操作<br>黄色：执行成功并且对目标主机做变更<br>红色：执行失败</p>\n<h4 id=\"ansible使用示例\"><a href=\"#ansible使用示例\" class=\"headerlink\" title=\"ansible使用示例\"></a>ansible使用示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以wang用户执行ping存活检测</span><br><span class=\"line\">ansible all -m ping -u wang -k</span><br><span class=\"line\">以wang sudo至root执行ping存活检测</span><br><span class=\"line\">ansible all -m ping -u wang –b -k</span><br><span class=\"line\">以wangsudo至mage用户执行ping存活检测</span><br><span class=\"line\">ansible all -m ping -u wang –b -k --become-user mage</span><br><span class=\"line\">以wang sudo至root用户执行ls</span><br><span class=\"line\">ansible all -m command -u wang--become-user=root -a &apos;ls/root&apos; -b –k -K</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible常用模块\"><a href=\"#ansible常用模块\" class=\"headerlink\" title=\"ansible常用模块\"></a>ansible常用模块</h3><h4 id=\"Command：在远程主机执行命令，默认模块，可忽略-m选项\"><a href=\"#Command：在远程主机执行命令，默认模块，可忽略-m选项\" class=\"headerlink\" title=\"Command：在远程主机执行命令，默认模块，可忽略-m选项\"></a>Command：在远程主机执行命令，默认模块，可忽略-m选项</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令：</span><br><span class=\"line\">chdir：    ＃运行该命令之前，切换到该目录。</span><br><span class=\"line\">creates：  ＃一个文件当它已经存在时，这个步骤将不运行。</span><br><span class=\"line\"></span><br><span class=\"line\">ansible srvs -m command -a &apos;service vsftpd start&apos; </span><br><span class=\"line\">ansible srvs -m command -a &apos;echo magedu |passwd --stdin wang&apos;   不成功此命令不支持$VARNAME &lt; &gt; | ;&amp; 等，用shell模块实现</span><br></pre></td></tr></table></figure>\n<h4 id=\"Shell：和command相似，用shell执行命令\"><a href=\"#Shell：和command相似，用shell执行命令\" class=\"headerlink\" title=\"Shell：和command相似，用shell执行命令\"></a>Shell：和command相似，用shell执行命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m shell -a &apos;echo xxxxx |passwd –stdin wang&apos; </span><br><span class=\"line\">调用bash执行命令类似cat /tmp/stanley.md | awk -F&apos;|&apos; &apos;&#123;print $1,$2&#125;&apos; &amp;&gt; /tmp/example.txt这些复杂命令，即使使用shell也可能会失败，解决办法：写到脚本时，copy到远程，执行，再把需要的结果拉回执行命令的机器</span><br><span class=\"line\">[root@centos7 ~]#ansible all -m shell -a &apos;echo $HOSTNAME&apos;</span><br><span class=\"line\">192.168.109.100 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">centos7.magedu.com</span><br><span class=\"line\">192.168.109.2 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">centos7</span><br><span class=\"line\">192.168.109.3 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">centos6.9</span><br></pre></td></tr></table></figure>\n<h4 id=\"Script：运行脚本\"><a href=\"#Script：运行脚本\" class=\"headerlink\" title=\"Script：运行脚本\"></a>Script：运行脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f1.sh</span><br><span class=\"line\">hostname</span><br><span class=\"line\">date .... 定义了一些脚本等</span><br><span class=\"line\"></span><br><span class=\"line\">snsible websrvs -m script -a &apos;f1.sh&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Copy-从服务器复制文件到客户端\"><a href=\"#Copy-从服务器复制文件到客户端\" class=\"headerlink\" title=\"Copy:从服务器复制文件到客户端,\"></a>Copy:从服务器复制文件到客户端,</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m copy -a &quot;src=/root/f1.sh dest=/tmp/f2.sh    owner=wang mode=600 backup=yes&quot; </span><br><span class=\"line\">如目标存在，默认覆盖，此处指定先备份</span><br><span class=\"line\"></span><br><span class=\"line\">ansible srv -m copy -a &quot;content=&apos;test content\\n&apos; dest=/tmp/f1.txt&quot; 利用内容，直接生成目标文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"cron：计划任务\"><a href=\"#cron：计划任务\" class=\"headerlink\" title=\"cron：计划任务\"></a>cron：计划任务</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">支持时间：minute，hour，day，month，weekday</span><br><span class=\"line\">ansible srv -m cron -a &quot;minute=*/5 job=&apos;/usr/bin/ntpdate 172.16.0.1 &amp;&gt;/dev/null&apos; name=Synctime&quot; 创建任务</span><br><span class=\"line\">ansible srv -a &apos;crontab -l&apos; 查看任务</span><br><span class=\"line\">ansible srv -m cron -a &apos;state=absent name=Synctime&apos;  删除任务</span><br><span class=\"line\">计划任务目录路径 /var/spool/cron/root</span><br><span class=\"line\">ansible srv -m cron -a &apos;disabled=yes job=&quot;/usr/bin/ntpdate 172.16.0.1 &amp;&gt;/dev/null&quot; name=Synctime&apos;</span><br><span class=\"line\">disables=yes 前面加上注释 no的话取消注释</span><br></pre></td></tr></table></figure>\n<h4 id=\"fetch-从客户端取文件至服务器端，copy相反，目录可先tar\"><a href=\"#fetch-从客户端取文件至服务器端，copy相反，目录可先tar\" class=\"headerlink\" title=\"fetch:从客户端取文件至服务器端，copy相反，目录可先tar\"></a>fetch:从客户端取文件至服务器端，copy相反，目录可先tar</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m fetch -a &apos;src=/root/a.sh dest=/data/scripts&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"file：设置文件属性\"><a href=\"#file：设置文件属性\" class=\"headerlink\" title=\"file：设置文件属性\"></a>file：设置文件属性</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m file -a &quot;path=/root/a.sh state=touch owner=wang mode=755&quot; //创建空文件 并设置权限等</span><br><span class=\"line\"></span><br><span class=\"line\">ansible web -m file -a &apos;src=/app/testfile  dest=/app/testfile-link state=link&apos; //创建软连接</span><br></pre></td></tr></table></figure>\n<h4 id=\"hostname：管理主机名\"><a href=\"#hostname：管理主机名\" class=\"headerlink\" title=\"hostname：管理主机名\"></a>hostname：管理主机名</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible web -m hostname -a &quot;name=websrv&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"yum：管理包\"><a href=\"#yum：管理包\" class=\"headerlink\" title=\"yum：管理包\"></a>yum：管理包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m yum -a &apos;name=httpd state=latest&apos;  安装</span><br><span class=\"line\">ansible srv -m yum -a &apos;name=httpd,tftp state=latest&apos;  安装多个</span><br><span class=\"line\">ansible srv -m yum -a &apos;name=httpd state=latest update_cache=yes&apos;  </span><br><span class=\"line\">update_cache=yes 相当于yum clean all</span><br><span class=\"line\">ansible srv -m yum -a &apos;name=httpd state=absent&apos;  删除</span><br></pre></td></tr></table></figure>\n<h4 id=\"service：管理服务\"><a href=\"#service：管理服务\" class=\"headerlink\" title=\"service：管理服务\"></a>service：管理服务</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m service -a &apos;name=httpd state=stopped enabled=yes&apos;关闭并且设置开机启动 不支持多个命令</span><br><span class=\"line\">ansible srv -m service -a &apos;name=httpd state=started&apos;启动</span><br><span class=\"line\">ansible srv –m service –a &apos;name=httpd state=reloaded&apos;</span><br><span class=\"line\">ansible srv -m service -a &apos;name=httpd state=restarted&apos;重启</span><br></pre></td></tr></table></figure>\n<h4 id=\"user：管理用户\"><a href=\"#user：管理用户\" class=\"headerlink\" title=\"user：管理用户\"></a>user：管理用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m user -a &apos;name=user1 comment=&quot;test user&quot; uid=2048 home=/app/user1 group=root&apos;创建普通用户</span><br><span class=\"line\">ansible srv -m user -a &apos;name=sysuser1 system=yes home=/app/sysuser1 &apos;创建系统用户</span><br><span class=\"line\">ansible srv -m user -a &apos;name=user1 state=absent remove=yes&apos; 删除用户及家目录等数据</span><br></pre></td></tr></table></figure>\n<h4 id=\"Group：管理组\"><a href=\"#Group：管理组\" class=\"headerlink\" title=\"Group：管理组\"></a>Group：管理组</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible srv -m group -a &quot;name=testgroup system=yes&quot;</span><br><span class=\"line\">ansible srv -m group -a &quot;name=testgroup state=absent&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ansible系列命令-1\"><a href=\"#ansible系列命令-1\" class=\"headerlink\" title=\"ansible系列命令\"></a>ansible系列命令</h3><h4 id=\"ansible-galaxy\"><a href=\"#ansible-galaxy\" class=\"headerlink\" title=\"ansible-galaxy\"></a>ansible-galaxy</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接https://galaxy.ansible.com 下载相应的roles</span><br><span class=\"line\">中文 http://www.ansible.com.cn/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">列出所有已安装的galaxy </span><br><span class=\"line\">    ansible-galaxy list</span><br><span class=\"line\">安装galaxy</span><br><span class=\"line\">    ansible-galaxy install geerlingguy.redis</span><br><span class=\"line\">删除galaxy</span><br><span class=\"line\">    ansible-galaxy remove geerlingguy.redis</span><br></pre></td></tr></table></figure>\n<h4 id=\"ansible-pull\"><a href=\"#ansible-pull\" class=\"headerlink\" title=\"ansible-pull\"></a>ansible-pull</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-pull</span><br><span class=\"line\">推送命令至远程，效率无限提升，对运维要求较高</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ansible-playbook\"><a href=\"#Ansible-playbook\" class=\"headerlink\" title=\"Ansible-playbook\"></a>Ansible-playbook</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-playbook hello.yml</span><br><span class=\"line\">例子：</span><br><span class=\"line\">vim hello.yml</span><br><span class=\"line\">- hosts: test</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: hello world </span><br><span class=\"line\">    command: wall &quot;hello world&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ansible-vault\"><a href=\"#Ansible-vault\" class=\"headerlink\" title=\"Ansible-vault\"></a>Ansible-vault</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能：管理加密解密yml文件</span><br><span class=\"line\">    ansible-vault [create|decrypt|edit|encrypt|rekey|view]</span><br><span class=\"line\">    ansible-vault encrypt hello.yml 加密</span><br><span class=\"line\">    ansible-vault decrypt hello.yml 解密</span><br><span class=\"line\">    ansible-vault view hello.yml 查看</span><br><span class=\"line\">    ansible-vault edit hello.yml 编辑加密文件</span><br><span class=\"line\">    ansible-vault rekey hello.yml 修改口令</span><br><span class=\"line\">    ansible-vault create new.yml 创建新文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ansible-console\"><a href=\"#Ansible-console\" class=\"headerlink\" title=\"Ansible-console\"></a>Ansible-console</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ansible-console：2.0+新增，可交互执行命令，支持tab</span><br><span class=\"line\">    root@test(2)[f:10] $</span><br><span class=\"line\">        执行用户@当前操作的主机组(当前组的主机数量)[f:并发数]$</span><br><span class=\"line\">    设置并发数：forks n  例如：forks 10</span><br><span class=\"line\">    切换组：cd 主机组例如：cd web</span><br><span class=\"line\">    列出当前组主机列表：list</span><br><span class=\"line\">    列出所有的内置命令：?或help</span><br><span class=\"line\">示例：</span><br><span class=\"line\">root@all (2)[f:5]$ list</span><br><span class=\"line\">root@all (2)[f:5]$ cd appsrvs</span><br><span class=\"line\">root@appsrvs (2)[f:5]$ list </span><br><span class=\"line\">root@appsrvs(2)[f:5]$ yum name=httpd state=present</span><br><span class=\"line\">root@appsrvs(2)[f:5]$ service name=httpd state=started</span><br></pre></td></tr></table></figure>\n<h3 id=\"playbook\"><a href=\"#playbook\" class=\"headerlink\" title=\"playbook\"></a>playbook</h3><ul>\n<li>playbook是由一个或多个“play”组成的列表</li>\n<li>play的主要功能在于将事先归并为一组的主机装扮成事先通过ansible中的task定义好的角色。从根本上来讲，所谓task无非是调用ansible的一个module。将多个play组织在一个playbook中，即可以让它们联同起来按事先编排的机制同唱一台大戏</li>\n<li>Playbook采用YAML语言编写</li>\n</ul>\n<p><center><img src=\"http://zhangqifei.top/picture/ansible/6.png\" alt=\"playbook\"></center></p>\n<h4 id=\"YAML介绍\"><a href=\"#YAML介绍\" class=\"headerlink\" title=\"YAML介绍\"></a>YAML介绍</h4><ul>\n<li>YAML是一个可读性高的用来表达资料序列的格式。YAML参考了其他多种语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822等。Clark Evans在2001年在首次发表了这种语言，另外IngydötNet与Oren Ben-Kiki也是这语言的共同设计者</li>\n<li>YAML Ain’tMarkup Language，即YAML不是XML。不过，在开发的这种语言时，YAML的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）</li>\n<li>特性<ul>\n<li>YAML的可读性好</li>\n<li>YAML和脚本语言的交互性好</li>\n<li>YAML使用实现语言的数据类型</li>\n<li>YAML有一个一致的信息模型</li>\n<li>YAML易于实现</li>\n<li>YAML可以基于流来处理</li>\n<li>YAML表达能力强，扩展性好</li>\n</ul>\n</li>\n</ul>\n<p>更多的内容及规范参见<a href=\"http://www.yaml.org\" target=\"_blank\" rel=\"noopener\">http://www.yaml.org</a></p>\n<h4 id=\"YAML语法简介\"><a href=\"#YAML语法简介\" class=\"headerlink\" title=\"YAML语法简介\"></a>YAML语法简介</h4><ul>\n<li>在单一档案中，可用连续三个连字号(——)区分多个档案。另外，还有选择性的连续三个点号( … )用来表示档案结尾</li>\n<li>次行开始正常写Playbook的内容，一般建议写明该Playbook的功能</li>\n<li>使用#号注释代码</li>\n<li>缩进必须是统一的，不能空格和tab混用</li>\n<li>缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判别配置的级别是通过缩进结合换行来实现的</li>\n<li>YAML文件内容和Linux系统大小写判断方式保持一致，是区别大小写的，k/v的值均需大小写敏感</li>\n<li>k/v的值可同行写也可换行写。同行使用:分隔</li>\n<li>v可是个字符串，也可是另一个列表一个完整的代码块功能需最少元素需包括name: task</li>\n<li>一个name只能包括一个task</li>\n<li>YAML文件扩展名通常为yml或yaml</li>\n</ul>\n<h5 id=\"YAML语法简介-1\"><a href=\"#YAML语法简介-1\" class=\"headerlink\" title=\"YAML语法简介\"></a>YAML语法简介</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dictionary：字典，通常由多个key与value构成</span><br><span class=\"line\">示例：</span><br><span class=\"line\">---</span><br><span class=\"line\"># An employee record</span><br><span class=\"line\">name: Example Developer</span><br><span class=\"line\">job: Developers</span><br><span class=\"line\">kill: Elite</span><br><span class=\"line\">也可以将key:value放置于&#123;&#125;中进行表示，用,分隔多个key:value</span><br><span class=\"line\">示例：</span><br><span class=\"line\">---</span><br><span class=\"line\"># An employee record</span><br><span class=\"line\">&#123;name: Example Developer, job: Developer, skill: Elite&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"YAML语法\"><a href=\"#YAML语法\" class=\"headerlink\" title=\"YAML语法\"></a>YAML语法</h3><p>YAML的语法和其他高阶语言类似，并且可以简单表达清单、散列表、标量等数据结构。其结构（Structure）通过空格来展示，序列（Sequence）里的项用”-“来代表，Map里的键值对用”:”分隔<br>示例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: John Smith</span><br><span class=\"line\">age: 41</span><br><span class=\"line\">gender: Male</span><br><span class=\"line\">spouse:</span><br><span class=\"line\">  name: Jane Smith</span><br><span class=\"line\">  age: 37</span><br><span class=\"line\">  gender: Female</span><br><span class=\"line\">children:</span><br><span class=\"line\">  - name: Jimmy Smith</span><br><span class=\"line\">    age: 17</span><br><span class=\"line\">    gender: Male</span><br><span class=\"line\">  - name: Jenny Smith</span><br><span class=\"line\">    age 13</span><br><span class=\"line\">    gender: Female</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Playbook核心元素\"><a href=\"#Playbook核心元素\" class=\"headerlink\" title=\"Playbook核心元素\"></a>Playbook核心元素</h3><ul>\n<li>Hosts      执行的远程主机列表</li>\n<li>Tasks      任务集</li>\n<li>Varniables 内置变量或自定义变量在playbook中调用</li>\n<li>Templates  模板，可替换模板文件中的变量并实现一些简单逻辑的文件</li>\n<li>Handlers   和notity结合使用，由特定条件触发的操作，满足条件方才执行，否则不执行</li>\n<li>tags       标签指定某条任务执行，用于选择运行playbook中的部分代码。ansible具有幂等性，因此会自动跳过没有变化的部分，即便如此，有些代码为测试其确实没有发生变化的时间依然会非常地长。此时，如果确信其没有变化，就可以通过tags跳过此些代码片断<code>ansible-playbook –t tagsname useradd.yml</code><br>示例:安装httpd 并且开机启动<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim test1.yml</span><br><span class=\"line\">- hosts: web</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: install package</span><br><span class=\"line\">      yum: name=httpd start=present</span><br><span class=\"line\">    - name: start service</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\">      </span><br><span class=\"line\">ansible-playbook test1.yml 执行</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"playbook基础组件\"><a href=\"#playbook基础组件\" class=\"headerlink\" title=\"playbook基础组件\"></a>playbook基础组件</h5><ul>\n<li>Hosts：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">playbook中的每一个play的目的都是为了让某个或某些主机以某个指定的用户身份执行任务。hosts用于指定要执行指定任务的主机，须事先定义在主机清单中</span><br><span class=\"line\">可以是如下形式：</span><br><span class=\"line\">one.example.com</span><br><span class=\"line\">one.example.com:two.example.com</span><br><span class=\"line\">192.168.1.50</span><br><span class=\"line\">192.168.1.*</span><br><span class=\"line\"></span><br><span class=\"line\">Websrvs:dbsrvs两个组的并集</span><br><span class=\"line\">Websrvs:&amp;dbsrvs两个组的交集</span><br><span class=\"line\">webservers:!phoenix  在websrvs组，但不在dbsrvs组</span><br><span class=\"line\">示例:-hosts: websrvs：dbsrvs</span><br></pre></td></tr></table></figure>\n<ul>\n<li>remote_user: </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可用于Host和task中。也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务；此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</span><br><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    -name: test connection</span><br><span class=\"line\">    ping: </span><br><span class=\"line\">    remote_user: magedu</span><br><span class=\"line\">    sudo: yes       默认sudo为root</span><br><span class=\"line\">    sudo_user:wang  sudo为wang</span><br></pre></td></tr></table></figure>\n<ul>\n<li>task列表和action</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">play的主体部分是task list。task list中的各任务按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个任务后再开始第二个。在运行自下而下某playbook时，如果中途发生错误，所有已执行任务都将回滚，因此，在更正playbook后重新执行一次即可</span><br><span class=\"line\"></span><br><span class=\"line\">task的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。模块执行是幂等的，这意味着多次执行是安全的，因为其结果均一致</span><br><span class=\"line\"></span><br><span class=\"line\">每个task都应该有其name，用于playbook的执行结果输出，建议其内容尽可能清晰地描述任务执行步骤。如果未提供name，则action的结果将用于输出</span><br></pre></td></tr></table></figure>\n<ul>\n<li>tasks：任务列表<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\">    (1) action: module arguments</span><br><span class=\"line\">    (2) module: arguments 建议使用</span><br><span class=\"line\">    注意：shell和command模块后面跟命令，而非key=value</span><br><span class=\"line\">某任务的状态在运行后为changed时，可通过“notify&quot;通知给相应的handlers</span><br><span class=\"line\">任务可以通过&quot;tags&quot;打标签，而后可在ansible-playbook命令上使用-t指定进行调用</span><br><span class=\"line\">示例：</span><br><span class=\"line\">tasks:</span><br><span class=\"line\">  - name: disable selinux</span><br><span class=\"line\">    command: /sbin/setenforce 0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果命令或脚本的退出码不为零，可以使用如下方式替代</span><br><span class=\"line\">tasks:</span><br><span class=\"line\">  - name: run this command and ignore the result</span><br><span class=\"line\">    shell: /usr/bin/somecommand|| /bin/true</span><br><span class=\"line\"></span><br><span class=\"line\">或者使用ignore_errors来忽略错误信息：</span><br><span class=\"line\">tasks:</span><br><span class=\"line\">  - name: run this command and ignore the result</span><br><span class=\"line\">    shell: /usr/bin/somecommand</span><br><span class=\"line\">    ignore_errors: True</span><br><span class=\"line\">    </span><br><span class=\"line\">运行playbook的方式</span><br><span class=\"line\">    ansible-playbook &lt;filename.yml&gt; ... [options]</span><br><span class=\"line\">常见选项</span><br><span class=\"line\">    --check 只检测可能会发生的改变，但不真正执行操作</span><br><span class=\"line\">    --list-hosts 列出运行任务的主机</span><br><span class=\"line\">    --limit 主机列表只针对主机列表中的主机执行</span><br><span class=\"line\">    -v 显示过程-vv-vvv更详细</span><br><span class=\"line\">示例</span><br><span class=\"line\">    ansible-playbook  file.yml --check 只检测</span><br><span class=\"line\">    ansible-playbook  file.yml </span><br><span class=\"line\">    ansible-playbook  file.yml --limit websrvs</span><br></pre></td></tr></table></figure>\n<h4 id=\"Playbook-VS-ShellScripts\"><a href=\"#Playbook-VS-ShellScripts\" class=\"headerlink\" title=\"Playbook VS ShellScripts\"></a>Playbook VS ShellScripts</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHELL脚本</span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"># 安装Apache</span><br><span class=\"line\">yum install --quiet -y httpd</span><br><span class=\"line\"># 复制配置文件</span><br><span class=\"line\">cp /path/to/config/httpd.conf /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">cp /path/to/httpd-vhosts.conf /etc/httpd/conf/httpd-vhosts.conf</span><br><span class=\"line\"># 启动Apache，并设置开机启动</span><br><span class=\"line\">service httpd start </span><br><span class=\"line\">chkconfig httpd on</span><br><span class=\"line\"></span><br><span class=\"line\">Playbook定义</span><br><span class=\"line\">---</span><br><span class=\"line\">  - hosts: all</span><br><span class=\"line\">    tasks: </span><br><span class=\"line\">      - name: &quot;安装Apache&quot;</span><br><span class=\"line\">        command: yum install -q -y httpd</span><br><span class=\"line\">      - name: &quot;复制配置文件&quot;</span><br><span class=\"line\">        command: cp /tmp/httpd.conf/ etc/httpd/conf/httpd.conf</span><br><span class=\"line\">        command: cp /tmp/httpd-vhosts.conf/ etc/httpd/conf/httpd-vhosts.conf</span><br><span class=\"line\">      - name: &quot;启动Apache，并设置开机启动&quot;</span><br><span class=\"line\">        service: name=httpd state=started enabled=yes</span><br></pre></td></tr></table></figure>\n<h5 id=\"示例system-yml：\"><a href=\"#示例system-yml：\" class=\"headerlink\" title=\"示例system.yml：\"></a>示例system.yml：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">  - hosts: allre</span><br><span class=\"line\">    mote_user: root</span><br><span class=\"line\">    </span><br><span class=\"line\">    tasks:</span><br><span class=\"line\">      - name: create mysql user</span><br><span class=\"line\">        user: name=mysql system=yes uid=36</span><br><span class=\"line\">      - name: create a group </span><br><span class=\"line\">        group: name=httpd system=yes</span><br></pre></td></tr></table></figure>\n<h4 id=\"Playbook示例\"><a href=\"#Playbook示例\" class=\"headerlink\" title=\"Playbook示例\"></a>Playbook示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例：httpd.yml</span><br><span class=\"line\"></span><br><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: Install httpd</span><br><span class=\"line\">      yum: name=httpd state=present</span><br><span class=\"line\">    - name: Install configure file</span><br><span class=\"line\">      copy: src=files/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">    - name: start service</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br></pre></td></tr></table></figure>\n<h4 id=\"handlers和notify结合使用触发条件\"><a href=\"#handlers和notify结合使用触发条件\" class=\"headerlink\" title=\"handlers和notify结合使用触发条件\"></a>handlers和notify结合使用触发条件</h4><ul>\n<li>Handlers</li>\n<li>是task列表，这些task与前述的task并没有本质上的不同,用于当关注的资源发生变化时，才会采取一定的操作</li>\n<li>notify这个action可用于在每个play的最后被触发，这样可以避免多次有改变发生时每次都执行指定的操作，仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler，也即notify中调用handler中定义的操作</li>\n</ul>\n<h4 id=\"Playbook中handlers使用\"><a href=\"#Playbook中handlers使用\" class=\"headerlink\" title=\"Playbook中handlers使用\"></a>Playbook中handlers使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts:websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: Install httpd </span><br><span class=\"line\">      yum: name=httpd state=present</span><br><span class=\"line\">    - name: Install configure file</span><br><span class=\"line\">      copy: src=files/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">      notify: restart httpd</span><br><span class=\"line\">    - name: ensure apache is running</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\">    </span><br><span class=\"line\">    handlers:</span><br><span class=\"line\">      - name: restart httpd</span><br><span class=\"line\">        service: name=httpd status=restarted</span><br></pre></td></tr></table></figure>\n<p>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: add group nginx</span><br><span class=\"line\">      tags: user</span><br><span class=\"line\">      user: name=nginx state=present</span><br><span class=\"line\">    - name: add user nginx</span><br><span class=\"line\">      user: name=nginx state=present group=nginx</span><br><span class=\"line\">    - name: Install Nginx</span><br><span class=\"line\">      yum: name=nginx state=present</span><br><span class=\"line\">    - name: config </span><br><span class=\"line\">      copy: src=/root/config.txt dest=/etc/nginx/nginx.conf</span><br><span class=\"line\">      notify:</span><br><span class=\"line\">        - Restart Nginx</span><br><span class=\"line\">        - Check Nginx Process</span><br><span class=\"line\">    </span><br><span class=\"line\">    handlers:</span><br><span class=\"line\">      - name: Restart Nginx</span><br><span class=\"line\">        service: name=nginx state=restarted enabled=yes</span><br><span class=\"line\">      - name: Check Nginx process</span><br><span class=\"line\">        shell:  killall -0 nginx &gt; /tmp/nginx.log</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Playbook中tags使用\"><a href=\"#Playbook中tags使用\" class=\"headerlink\" title=\"Playbook中tags使用\"></a>Playbook中tags使用</h4><p>示例：httpd.yml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: websrvs</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  </span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: Install httpd</span><br><span class=\"line\">      yum: name=httpd state=present</span><br><span class=\"line\">    - name: Install configure file</span><br><span class=\"line\">      copy: src=files/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">      tags: conf</span><br><span class=\"line\">    - name: start httpd service</span><br><span class=\"line\">      tags: service</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes </span><br><span class=\"line\">      </span><br><span class=\"line\">ansible-playbook –t conf httpd.yml</span><br><span class=\"line\">    -t //--tags</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"综合实例：安装httpd-并且启动端口是8080\"><a href=\"#综合实例：安装httpd-并且启动端口是8080\" class=\"headerlink\" title=\"综合实例：安装httpd 并且启动端口是8080\"></a>综合实例：安装httpd 并且启动端口是8080</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本机先安装httpd 把httpd配置文件 /etc/httpd/conf/httpd.conf 里面端口改为8080</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 app]#cat httpd.yml </span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: web</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\"></span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: install httpd</span><br><span class=\"line\">      yum: name=httpd</span><br><span class=\"line\">    - name: copy config file</span><br><span class=\"line\">      copy: src=/app/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">    - name: start httpd</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\">      </span><br><span class=\"line\">[root@centos7 app]#ansible-playbook httpd.yml</span><br><span class=\"line\">现在把端口改为80</span><br><span class=\"line\">[root@centos7 app]#cat httpd.yml </span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: web</span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\"></span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: install httpd</span><br><span class=\"line\">      yum: name=httpd</span><br><span class=\"line\">    - name: copy config file</span><br><span class=\"line\">      copy: src=/app/httpd.conf dest=/etc/httpd/conf/</span><br><span class=\"line\">      notify: restart httpd</span><br><span class=\"line\">    - name: start httpd</span><br><span class=\"line\">      service: name=httpd state=started enabled=yes</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  handlers:</span><br><span class=\"line\">    - name: restart httpd</span><br><span class=\"line\">      service: name=httpd state=restarted</span><br><span class=\"line\">[root@centos7 app]#ansible-playbook --limit 192.18.109.1  httpd.yml 只针对这一台机器</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 app]#ansible web -m shell -a &apos;ss -ntl|grep 80&apos;</span><br><span class=\"line\">192.168.109.100 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">LISTEN     0      128         :::80                      :::*                 </span><br><span class=\"line\">192.168.109.2 | SUCCESS | rc=0 &gt;&gt;</span><br><span class=\"line\">LISTEN     0      128         :::80                      :::*</span><br></pre></td></tr></table></figure>","categories":[{"name":"linux","path":"api/categories/linux.json"},{"name":"运维自动化工具","path":"api/categories/运维自动化工具.json"}],"tags":[{"name":"ansible","path":"api/tags/ansible.json"}]}